<Window
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video.SmileVideoPlayerWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"

  xmlns:vlc_wpf="clr-namespace:Meta.Vlc.Wpf;assembly=Meta.Vlc.Wpf"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"

  xmlns:app_define_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.Define.Service.Smile.Video"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"
  xmlns:app_view_controls_service_smile_video_setting="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video.Setting"
  xmlns:app_view_converter_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter.Service.Smile.Video"

  ResizeMode="CanResizeWithGrip"

  Title="{Binding Title}"
  Left="{Binding Left, Mode=TwoWay}"
  Top="{Binding Top, Mode=TwoWay}"
  Width="{Binding Width, Mode=TwoWay}"
  Height="{Binding Height, Mode=TwoWay}"
  WindowState="{Binding State, Mode=TwoWay}"

  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
  d:DesignHeight="540" d:DesignWidth="780"
>
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/Resources/ListBoxDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/GridSplitterDictionary.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

      <sys:Double x:Key="ImageWidth">100</sys:Double>
      <sys:Double x:Key="ImageHeight">80</sys:Double>

      <cttn_sl_view_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />

      <app_view_converter_service_smile_video:TimespanToHMFormatConverter x:Key="TimespanToHMFormatConverter" />

      <Style x:Key="ThumbnailImage" TargetType="Image" >
        <Setter Property="Width" Value="{StaticResource ImageWidth}" />
        <Setter Property="Height" Value="{StaticResource ImageHeight}" />
      </Style>

    </ResourceDictionary>
  </Window.Resources>
  <DockPanel>

    <ToolBar DockPanel.Dock="Top">
      <Button Command="{Binding OpenCacheDirectoryCommand}">
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="cache:" />
          <TextBlock Text="{Binding VideoId}" />
        </StackPanel>
      </Button>
      <Menu>
        <MenuItem Header="add mylist" ItemsSource="{Binding AccountMyListItems}">
          <MenuItem.ItemContainerStyle>
            <Style TargetType="MenuItem">
              <Setter Property="Command" Value="{Binding DataContext.AdditionMyListCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
              <Setter Property="CommandParameter" Value="{Binding}" />
            </Style>
          </MenuItem.ItemContainerStyle>
          <MenuItem.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding MyListName}" />
            </DataTemplate>
          </MenuItem.ItemTemplate>
        </MenuItem>
      </Menu>

      <Separator />

      <Button Command="{Binding LoadPrevPlayListItemCommand}">prev</Button>
      <Menu>
        <MenuItem Header="play list" ItemsSource="{Binding PlayListItems}">
          <MenuItem.ItemContainerStyle>
            <Style TargetType="MenuItem">
              <Setter Property="Command" Value="{Binding DataContext.LoadSelectPlayListItemCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
              <Setter Property="CommandParameter" Value="{Binding}" />
            </Style>
          </MenuItem.ItemContainerStyle>
          <MenuItem.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Title}" />
            </DataTemplate>
          </MenuItem.ItemTemplate>
        </MenuItem>
      </Menu>
      <Button Command="{Binding LoadNextPlayListItemCommand}">next</Button>

      <Separator />

      <Menu>
        <MenuItem Header="player size">
          <MenuItem>
            <MenuItem.Header>
              <TextBlock>
                思った以上に計算ややこしいから
                <LineBreak/>
                動画サイズに連動したプレイヤーサイズ変更は
                <LineBreak/>
                あとまわし
              </TextBlock>
            </MenuItem.Header>
            <MenuItem.Icon>
              <Label FontSize="30">☃</Label>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="50%" Command="{Binding ChangePlayerSizeCommand}" CommandParameter="50"  />
          <MenuItem Header="75%" Command="{Binding ChangePlayerSizeCommand}" CommandParameter="75"  />
          <MenuItem Header="100%" Command="{Binding ChangePlayerSizeCommand}" CommandParameter="100"  />
          <MenuItem Header="150%" Command="{Binding ChangePlayerSizeCommand}" CommandParameter="150"  />
          <MenuItem Header="200%" Command="{Binding ChangePlayerSizeCommand}" CommandParameter="200" />
        </MenuItem>
      </Menu>

    </ToolBar>

    <StatusBar DockPanel.Dock="Bottom" >
      <ToggleButton x:Name="switchInformation" Content="info" IsChecked="{Binding PlayerShowDetailArea}" />
      <StackPanel Orientation="Horizontal" Panel.ZIndex="100" Grid.Row="2" >
        <StackPanel.Resources>
          <Style TargetType="app_view_controls:LoadStateNavigator">
            <Setter Property="LoadedToVisibility" Value="Visible" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Height" Value="10" />
          </Style>
        </StackPanel.Resources>
        <TextBlock>
          <Run>[</Run>
          <Run Text="{Binding PlayerState, Mode=OneWay}"/>
          <Run>]</Run>
        </TextBlock>
        <TextBlock>
          <Run>[</Run>
          <Run>economy</Run>
          <Run>:</Run>
          <Run Text="{Binding IsEconomyMode, Mode=OneWay}"/>
          <Run>]</Run>
        </TextBlock>
        <TextBlock>
          <Run>[</Run>
          <Run>info</Run>
          <Run>:</Run>
          <app_view_controls:LoadStateNavigator LoadState="{Binding InformationLoadState}" />
          <TextBlock>
            <Run>(</Run>
            <Run>upload</Run>
            <Run>:</Run>
            <Run Text="{Binding VideoInformation.FirstRetrieve, Mode=OneWay}" />
            <Run>,</Run>
            <Run>view</Run>
            <Run>:</Run>
            <Run Text="{Binding VideoInformation.ViewCounter, Mode=OneWay}" />
            <Run>,</Run>
            <Run>mylist</Run>
            <Run>:</Run>
            <Run Text="{Binding VideoInformation.MylistCounter, Mode=OneWay}" />
            <Run>,</Run>
            <Run>comment</Run>
            <Run>:</Run>
            <Run Text="{Binding VideoInformation.CommentCounter, Mode=OneWay}" />
            <Run>)</Run>
          </TextBlock>
          <Run>]</Run>
        </TextBlock>
        <TextBlock>
          <Run>[</Run>
          <Run>image</Run>
          <Run>:</Run>
          <app_view_controls:LoadStateNavigator LoadState="{Binding ThumbnailLoadState}" />
          <Run>]</Run>
        </TextBlock>
        <TextBlock>
          <Run>[</Run>
          <Run>comment</Run>
          <Run>:</Run>
          <app_view_controls:LoadStateNavigator LoadState="{Binding CommentLoadState}" />
          <Run>]</Run>
        </TextBlock>
        <TextBlock>
          <Run>[</Run>
          <Run>video</Run>
          <Run>:</Run>
          <app_view_controls:LoadStateNavigator LoadState="{Binding VideoLoadState}" />
          <Run>,</Run>
          <Run>size</Run>
          <Run Text="{Binding RealVideoWidth, Mode=OneWay}" />
          <Run>x</Run>
          <Run Text="{Binding RealVideoHeight, Mode=OneWay}" />
          <Run>]</Run>
        </TextBlock>
      </StackPanel>
    </StatusBar>

    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"  />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="120" />
      </Grid.RowDefinitions>

      <Grid Grid.Row="0" VerticalAlignment="Stretch">
        <Grid.Style>
          <Style>
            <Setter Property="Grid.RowSpan" Value="1" />
            <Style.Triggers>
              <DataTrigger Binding="{Binding IsChecked, ElementName=switchInformation}" Value="False">
                <Setter Property="Grid.RowSpan" Value="3" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Grid.Style>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="7*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
          <Grid.Style>
            <Style>
              <Setter Property="Grid.ColumnSpan" Value="1" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding PlayerShowCommentArea}" Value="False">
                  <Setter Property="Grid.ColumnSpan" Value="3" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Grid.Style>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>

          <vlc_wpf:VlcPlayer x:Name="player" Grid.Row="0" EndBehavior="Nothing" />

          <Viewbox Grid.Row="0" ClipToBounds="True" Stretch="Fill" Width="{Binding BaseWidth}" Height="{Binding BaseHeight}" Visibility="{Binding PlayerVisibleComment, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid Width="{Binding CommentAreaWidth}" Height="{Binding CommentAreaHeight}" >
              <Canvas x:Name="normalCommentArea" />
              <Canvas x:Name="originalPosterCommentArea" />
            </Grid>
          </Viewbox>

          <Grid Grid.Row="1">
            <Grid.RowDefinitions>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <app_view_controls:Navigationbar
              x:Name="seekbar"
              Grid.Row="0"
              VideoPosition="{Binding VideoPosition}"
              VideoLoadedSize="{Binding VideoLoadedSize}"
              VideoTotalSize="{Binding VideoTotalSize}"
              Volume="{Binding Volume}"
              PlayTime="{Binding PlayTime}"
              TotalTime="{Binding TotalTime}"
              PlayerState="{Binding PlayerState}"
              PlayCommand="{Binding PlayCommand}"
              StopCommand="{Binding StopCommand}"
              IsReplayChecked="{Binding ReplayVideo}"
              IsMute="{Binding IsMute}"
            >
              <app_view_controls:Navigationbar.ExstendsContent>
                <StackPanel Orientation="Horizontal">
                  <ToggleButton Content="msg" IsChecked="{Binding PlayerVisibleComment}" />
                  <ToggleButton Content="list" IsChecked="{Binding PlayerShowCommentArea}" />
                </StackPanel>
              </app_view_controls:Navigationbar.ExstendsContent>
            </app_view_controls:Navigationbar>
          </Grid>

          <Grid Grid.Row="2">
            <TextBox></TextBox>
          </Grid>
        </Grid>

        <GridSplitter
          Grid.Row="0" Grid.Column="1"
          Style="{StaticResource DefaultVericalGridSplitter}"
          Visibility="{Binding PlayerShowCommentArea, Converter={StaticResource BooleanToVisibilityConverter}}"
        />

        <TabControl Grid.Row="0" Grid.Column="2"  Visibility="{Binding PlayerShowCommentArea, Converter={StaticResource BooleanToVisibilityConverter}}">
          <TabItem Header="comment">
            <DockPanel>
              <DockPanel DockPanel.Dock="Top">
                <DockPanel DockPanel.Dock="Top">
                  <CheckBox DockPanel.Dock="Left" IsChecked="{Binding IsAutoScroll}">auto scroll</CheckBox>
                  <CheckBox DockPanel.Dock="Left" IsChecked="{Binding IsEnabledSharedNoGood}">shared ng</CheckBox>
                  <TextBlock DockPanel.Dock="Left" Margin="2,0,0,0">low</TextBlock>
                  <TextBlock DockPanel.Dock="Right">high</TextBlock>
                  <Slider Minimum="-3000" Maximum="-1" Value="{Binding SharedNoGoodScore}" ToolTip="{Binding SharedNoGoodScore}" />
                </DockPanel>
                <RadioButton DockPanel.Dock="Left" IsChecked="{Binding FilteringCommentType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_service_smile_video:SmileVideoFilteringCommentType.All}}">
                  <TextBlock>
                    <Run Text="all" />
                    <Run Text="{Binding CommentListCount, Mode=OneWay, StringFormat=({0})}" />
                  </TextBlock>
                </RadioButton>
                <RadioButton DockPanel.Dock="Left" IsChecked="{Binding FilteringCommentType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_service_smile_video:SmileVideoFilteringCommentType.OriginalPoster}}">
                  <RadioButton.Style>
                    <Style TargetType="RadioButton">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding OriginalPosterCommentListCount}" Value="0">
                          <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </RadioButton.Style>
                  <TextBlock>
                    <Run Text="op" />
                    <Run Text="{Binding OriginalPosterCommentListCount, Mode=OneWay, StringFormat=({0})}" />
                  </TextBlock>
                </RadioButton>
                <RadioButton DockPanel.Dock="Left" IsChecked="{Binding FilteringCommentType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_service_smile_video:SmileVideoFilteringCommentType.UserId}}">
                  <RadioButton.Style>
                    <Style TargetType="RadioButton">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding CommentListCount}" Value="0">
                          <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </RadioButton.Style>
                  <TextBlock>user</TextBlock>
                </RadioButton>
                <TextBlock DockPanel.Dock="Right">
                  <TextBlock.Style>
                    <Style TargetType="TextBlock">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding FilteringCommentType}" Value="UserId">
                          <Setter Property="Text" Value="{Binding CommentItems.Count, Mode=OneWay, StringFormat=({0})}" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                </TextBlock>
                <TextBox
                  Text="{Binding FilteringUserId, Delay=500, UpdateSourceTrigger=PropertyChanged}"
                  IsEnabled="{Binding FilteringCommentType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_service_smile_video:SmileVideoFilteringCommentType.UserId}}"
                />
              </DockPanel>
              <DockPanel DockPanel.Dock="Bottom">
                <DockPanel>
                  <CheckBox DockPanel.Dock="Left" IsChecked="{Binding IsEnabledDisplayCommentLimit}">
                    <TextBlock>
                      <Run>show comment limit</Run>
                      <Run>(</Run>
                      <Run Text="{Binding ShowingCommentList.Count, Mode=OneWay}" />
                      <Run>
                        <Run.Style>
                          <Style TargetType="Run">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsEnabledDisplayCommentLimit}" Value="True">
                                <Setter Property="Text" Value="{Binding DisplayCommentLimitCount, StringFormat=/{0}}" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Run.Style>
                      </Run>
                      <Run>)</Run>
                    </TextBlock>
                  </CheckBox>
                  <TextBlock DockPanel.Dock="Left" >low</TextBlock>
                  <TextBlock DockPanel.Dock="Right" >high</TextBlock>
                  <Slider
                    Minimum="1"
                    Maximum="50"
                    Value="{Binding DisplayCommentLimitCount}"
                    IsEnabled="{Binding IsEnabledDisplayCommentLimit}"
                  />
                </DockPanel>
              </DockPanel>
              <DockPanel DockPanel.Dock="Bottom" Visibility="{Binding IsSelectedComment, Converter={StaticResource BooleanToVisibilityConverter}}">
                <GroupBox>
                  <GroupBox.Header>
                    <DockPanel>
                      <Button DockPanel.Dock="Right" Content="close" Command="{Binding ClearSelectedCommentCommand}" />
                      <TextBlock>comment</TextBlock>
                    </DockPanel>
                  </GroupBox.Header>
                  <Grid>
                    <Grid.Resources>
                      <Style TargetType="TextBox">
                        <Setter Property="IsReadOnly" Value="True" />
                      </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0">show time</TextBlock>
                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding SelectedComment.ElapsedTime, Mode=OneWay}" />

                    <TextBlock Grid.Row="1" Grid.Column="0">post time</TextBlock>
                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding SelectedComment.Timestamp, Mode=OneWay}" />

                    <TextBlock Grid.Row="2" Grid.Column="0">score</TextBlock>
                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding SelectedComment.Score, Mode=OneWay}" />

                    <TextBlock Grid.Row="3" Grid.Column="0">comment</TextBlock>
                    <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding SelectedComment.Content, Mode=OneWay}" />

                    <TextBlock Grid.Row="4" Grid.Column="0">command</TextBlock>
                    <ComboBox Grid.Row="4" Grid.Column="1" ItemsSource="{Binding SelectedComment.Commands, Mode=OneWay}" />

                    <TextBlock Grid.Row="5" Grid.Column="0">user</TextBlock>
                    <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding SelectedComment.UserId, Mode=OneWay}" />

                    <TextBlock Grid.Row="6" Grid.Column="0">kind</TextBlock>
                    <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding SelectedComment.UserKind, Mode=OneWay}" />

                    <TextBlock Grid.Row="7" Grid.Column="0">anonymity</TextBlock>
                    <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding SelectedComment.Anonymity, Mode=OneWay}" />

                    <TextBlock Grid.Row="8" Grid.Column="0">approval</TextBlock>
                    <TextBox Grid.Row="8" Grid.Column="1" Text="{Binding SelectedComment.Approval, Mode=OneWay}" />
                  </Grid>
                </GroupBox>
              </DockPanel>
              <ListView x:Name="commentView" SelectedItem="{Binding SelectedComment}" ItemsSource="{Binding CommentItems}">
                <ListView.ItemContainerStyle>
                  <Style TargetType="ListViewItem">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding NowShowing}" Value="True">
                        <Setter Property="FontWeight" Value="Bold" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                  <GridView>
                    <GridViewColumn>
                      <GridViewColumn.HeaderTemplate>
                        <ItemContainerTemplate>
                          <TextBlock Text="time" />
                        </ItemContainerTemplate>
                      </GridViewColumn.HeaderTemplate>
                      <GridViewColumn.CellTemplate>
                        <ItemContainerTemplate>
                          <TextBlock Text="{Binding ElapsedTime, Converter={StaticResource TimespanToHMFormatConverter}}" />
                        </ItemContainerTemplate>
                      </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn>
                      <GridViewColumn.HeaderTemplate>
                        <ItemContainerTemplate>
                          <TextBlock Text="comment" />
                        </ItemContainerTemplate>
                      </GridViewColumn.HeaderTemplate>
                      <GridViewColumn.CellTemplate>
                        <ItemContainerTemplate>
                          <TextBlock Text="{Binding Content}">
                            <TextBlock.Style>
                              <Style TargetType="TextBlock">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding Approval}" Value="False">
                                    <Setter Property="TextDecorations">
                                      <Setter.Value>
                                        <TextDecorationCollection>
                                          <TextDecoration Location="Strikethrough" />
                                        </TextDecorationCollection>
                                      </Setter.Value>
                                    </Setter>
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </TextBlock.Style>
                          </TextBlock>
                        </ItemContainerTemplate>
                      </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn>
                      <GridViewColumn.HeaderTemplate>
                        <ItemContainerTemplate>
                          <TextBlock Text="timestamp" />
                        </ItemContainerTemplate>
                      </GridViewColumn.HeaderTemplate>
                      <GridViewColumn.CellTemplate>
                        <ItemContainerTemplate>
                          <TextBlock Text="{Binding Timestamp}" />
                        </ItemContainerTemplate>
                      </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                  </GridView>
                </ListView.View>
              </ListView>
            </DockPanel>
          </TabItem>
          <TabItem Header="NG: local">
            <app_view_controls_service_smile_video_setting:SmileVideoFilteringCommentList Filtering="{Binding LocalCommentFilering}">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="FilteringChanged">
                  <i:InvokeCommandAction Command="{Binding ChangedFilteringCommand}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </app_view_controls_service_smile_video_setting:SmileVideoFilteringCommentList>
          </TabItem>
          <TabItem Header="NG: global">
            <app_view_controls_service_smile_video_setting:SmileVideoFilteringCommentList Filtering="{Binding GlobalCommentFilering}">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="FilteringChanged">
                  <i:InvokeCommandAction Command="{Binding ChangedFilteringCommand}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </app_view_controls_service_smile_video_setting:SmileVideoFilteringCommentList>
          </TabItem>
        </TabControl>
      </Grid>

      <GridSplitter
        Grid.Row="1"
        Height="4"
        Style="{StaticResource DefaultHorizonGridSplitter}"
        Visibility="{Binding IsChecked, ElementName=switchInformation, Converter={StaticResource BooleanToVisibilityConverter}}"
      />

      <TabControl
        Grid.Row="2"
        TabStripPlacement="Left"
        Visibility="{Binding IsChecked, ElementName=switchInformation, Converter={StaticResource BooleanToVisibilityConverter}}"
      >
        <TabItem Header="movie">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="4" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0">
              <Image Style="{StaticResource ThumbnailImage}" Source="{Binding ThumbnailImage}" />

              <!--<TextBlock Text="{Binding UserNickname}" />-->
              <Grid>
                <app_view_controls:LoadStateNavigator LoadState="{Binding InformationLoadState}" />
                <TextBlock>
                  <Hyperlink Command="{Binding OpenUserIdCommand}">
                    <Run>
                      <Run.Resources>
                        <Style TargetType="Run">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding InformationLoadState}" Value="Loaded">
                              <Setter Property="Text" Value="{Binding UserNickname, Mode=OneTime}" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </Run.Resources>
                    </Run>
                  </Hyperlink>
                </TextBlock>
              </Grid>

            </StackPanel>

            <GridSplitter Grid.Column="1" />

            <Grid Grid.Row="1"  Grid.Column="2" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="tag:" />
                <ItemsControl Grid.Column="1" ItemsSource="{Binding TagItems}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="10">
                          <TextBlock Visibility="{Binding IsLocked, Converter={StaticResource BooleanToVisibilityConverter}}" >[L]</TextBlock>
                          <TextBlock Visibility="{Binding IsCategory, Converter={StaticResource BooleanToVisibilityConverter}}" >[C]</TextBlock>
                          <Hyperlink
                            Command="{Binding DataContext.SearchTagCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            CommandParameter="{Binding}"
                          >
                            <Run Text="{Binding TagName, Mode=OneTime}" />
                          </Hyperlink>
                          <TextBlock Visibility="{Binding ExistPedia, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Hyperlink
                              Command="{Binding DataContext.OpenPediaCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                              CommandParameter="{Binding}"
                            >
                              <Run>[百]</Run>
                            </Hyperlink>
                          </TextBlock>
                          <!-- TODO: ださい -->
                          <Border Width="8" />
                        </TextBlock>
                      </StackPanel>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </Grid>
              <Grid Grid.Row="1">
                <FlowDocumentScrollViewer
                x:Name="documentDescription"
                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                FontFamily="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"
              >
                  <FlowDocument
                    FontSize="11.5"
                    PagePadding="10, 2, 10, 0"
                  />
                </FlowDocumentScrollViewer>
              </Grid>
            </Grid>
          </Grid>
        </TabItem>
        <TabItem Header="relation">
          <ScrollViewer>
            <ItemsControl ItemsSource="{Binding RelationVideoItems}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <UniformGrid />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <StackPanel>
                    <Grid>
                      <app_view_controls:LoadStateNavigator ShowStateText="True" LoadState="{Binding ThumbnailLoadState}" />
                      <Image Style="{StaticResource ThumbnailImage}" Source="{Binding ThumbnailImage}" />
                    </Grid>
                    <TextBlock HorizontalAlignment="Stretch">
                      <Hyperlink Command="{Binding DataContext.OpenRelationVideo, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}">
                        <Run Text="{Binding Title, Mode=OneTime}" />
                      </Hyperlink>
                    </TextBlock>
                  </StackPanel>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </ScrollViewer>
        </TabItem>
        <TabItem Header="market">
        </TabItem>
      </TabControl>
    </Grid>
  </DockPanel>
</Window>
