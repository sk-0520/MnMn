<!--
  呼び出し元から DataContext を設定して使用。
-->
<UserControl
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video.SmileVideoMyListManager"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"
  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"
  xmlns:app_view_converter_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter.Service.Smile.Video"
  xmlns:app_view_controls_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="500"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/Resources/ListBoxDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/GridSplitterDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/TabDictionary.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

      <cttn_sl_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />
      <app_view_converter:SourceLoadStateIsNotCompletedConverter x:Key="SourceLoadStateIsNotCompletedConverter" />
      <app_view_converter_service_smile_video:MyLIstFolderIdToIdConverter x:Key="MyLIstFolderIdToIdConverter" />
      <app_view_converter_service_smile_video:MyLIstFolderIdToColorConverter x:Key="MyLIstFolderIdToColorConverter" />

      <Style x:Key="MyListBox" TargetType="ListBox" BasedOn="{StaticResource ContentListBox}">
        <Setter Property="SelectedItem" Value="{Binding DataContext.SelectedFinder, RelativeSource={RelativeSource AncestorType=UserControl}}" />
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <StackPanel>
                <TextBlock Text="{Binding HasMyListFolder, Mode=OneWay}" />
                <Rectangle Width="16" Height="16" Visibility="{Binding HasMyListFolder, Converter={StaticResource BooleanToVisibilityConverter}}">
                  <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding MyListFolderColor}" />
                  </Rectangle.Fill>
                </Rectangle>
                <TextBlock Text="{Binding MyListName}" />
                <TextBlock>
                  <TextBlock.Style>
                    <Style TargetType="TextBlock">
                      <Style.Triggers>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding FinderLoadState, Converter={StaticResource SourceLoadStateIsNotCompletedConverter}}" Value="True"  />
                            <Condition Binding="{Binding MyListItemCount}" Value="0" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Text" Value="not loaded" />
                        </MultiDataTrigger>
                      </Style.Triggers>
                      <Setter Property="Text" Value="{Binding MyListItemCount}" />
                    </Style>
                  </TextBlock.Style>
                </TextBlock>
                <TextBlock Visibility="{Binding IsAccountMyList, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Run Text="type:" />
                <Run>
                  <Run.Style>
                    <Style TargetType="Run">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPublic}" Value="True">
                          <Setter Property="Text" Value="public" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPublic}" Value="False">
                          <Setter Property="Text" Value="private" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Run.Style>
                </Run>
                </TextBlock>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                  <app_view_controls:SourceLoadStateNavigator Width="8" Height="8" SourceLoadState="{Binding FinderLoadState}" />
                  <TextBlock Text="{Binding FinderLoadState, Mode=OneWay}" />
                </StackPanel>

              </StackPanel>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="35*" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="65*" />
    </Grid.ColumnDefinitions>

    <Grid Grid.Column="0">
      <!-- 各データコンテキストは選択用で下位はUserControlのデータコンテキストを参照する -->
      <TabControl Style="{StaticResource FinderTab}">
        <TabItem x:Name="viewAccount" Header="account" IsSelected="{Binding IsSelectedAccount}">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <Button Command="{Binding LoadAccountMyListCommand}">load</Button>
              <Button Command="{Binding CreateAccountMyListCommand}">create</Button>
              <Button Command="{Binding RemoveSelectedAccountMyListCommand}">remove</Button>
            </ToolBar>
            <Expander DockPanel.Dock="Bottom" Header="edit" Visibility="{Binding SelectedAccountFinder.CanEdit, Converter={StaticResource BooleanToVisibilityConverter}}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="name" />
                <Grid Grid.Row="0" Grid.Column="1" >
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TextBox Grid.Column="0" Text="{Binding SelectedAccountFinder.EditingMyListName, UpdateSourceTrigger=PropertyChanged}" />
                  <ComboBox Grid.Column="1" ItemsSource="{Binding FolderIdColors}" SelectedValue="{Binding SelectedAccountFinder.EditingMyListFolderIdElement}" >
                    <ComboBox.ItemTemplate>
                      <DataTemplate>
                        <Rectangle Height="16" Width="16">
                          <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding Converter={StaticResource MyLIstFolderIdToColorConverter}}" />
                          </Rectangle.Fill>
                        </Rectangle>
                      </DataTemplate>
                    </ComboBox.ItemTemplate>
                  </ComboBox>
                  <CheckBox Grid.Column="2" Content="public" IsChecked="{Binding SelectedAccountFinder.EditingMyListIsPublic}"/>
                </Grid>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="sort" />
                <ComboBox Grid.Row="1" Grid.Column="1" DisplayMemberPath="DisplayText" ItemsSource="{Binding Sorts}" SelectedValue="{Binding SelectedAccountFinder.EditingMyListSortElement}" />

                <GroupBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Header="memo" >
                  <TextBox
                    AcceptsReturn="True"
                    Text="{Binding SelectedAccountFinder.EditingMyListDescription, UpdateSourceTrigger=PropertyChanged}"
                  />
                </GroupBox>

                <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Button Grid.Column="0" Content="save" Command="{Binding SaveEditCommand}" CommandParameter="{Binding SelectedAccountFinder}" IsEnabled="{Binding SelectedAccountFinder.IsEditing}" />
                  <Button Grid.Column="1" Content="cancel" Command="{Binding SelectedAccountFinder.CancelEditCommand}" IsEnabled="{Binding SelectedAccountFinder.IsEditing}"/>
                </Grid>

              </Grid>
            </Expander>
            <ToolBar DockPanel.Dock="Bottom">
              <Button Command="{Binding RemoveCheckedAccountMyListVideoCommand}">remove video</Button>
            </ToolBar>
            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedAccountFinder}" ItemsSource="{Binding AccountMyListItems}" />
          </DockPanel>
        </TabItem>

        <TabItem x:Name="viewSearch" Header="search" IsSelected="{Binding IsSelectedSearch}">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <TextBox Text="{Binding InputSearchMyList}" />
              <Button Command="{Binding SearchUserMyListCommand}">find</Button>
              <Separator />
              <Button Command="{Binding AddBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedSearchFinder}" >add bookmark</Button>
            </ToolBar>

            <app_view_controls:Pager
              DockPanel.Dock="Bottom"
              PageItems="{Binding PageItems}"
              Command="{Binding DataContext.SearchUserMyListPageChangeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
            />
            <!--<app_view_controls:Pager
              DockPanel.Dock="Bottom"
              PageItems="{Binding SearchItems}"
              Command="{Binding DataContext.SearchUserMyListPageChangeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
            />-->
            <!--<ItemsControl  DockPanel.Dock="Bottom" ItemsSource="{Binding SearchItems}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Button
                      Content="{Binding PageNumber }"
                      Command="{Binding DataContext.SearchUserMyListPageChangeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                      CommandParameter="{Binding }"
                    />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>-->

            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedSearchFinder}" ItemsSource="{Binding SearchUserMyListItems}" />

          </DockPanel>
        </TabItem>

        <TabItem x:Name="viewBookmark" Header="bookmark" IsSelected="{Binding IsSelectedBookmark}">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <Button Command="{Binding RemoveSelectedBookmarkUserMyListCommand}">remove</Button>
              <Separator />
              <Button Command="{Binding PositionUpBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedBookmarkFinder}">up</Button>
              <Button Command="{Binding PositionDownBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedBookmarkFinder}">down</Button>
            </ToolBar>
            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedBookmarkFinder}" ItemsSource="{Binding BookmarkUserMyListItems}" />
          </DockPanel>
        </TabItem>

        <TabItem x:Name="viewHistory" Header="hist" IsSelected="{Binding IsSelectedHistory}">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <Button Command="{Binding AddBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedHistoryFinder}">add bookmark</Button>
            </ToolBar>
            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedHistoryFinder}" ItemsSource="{Binding HistoryUserMyListItems}" />
          </DockPanel>
        </TabItem>

      </TabControl>


    </Grid>


    <GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />

    <Grid Grid.Column="2">
      <app_view_controls_service_smile_video:SmileVideoFinderControl DataContext="{Binding SelectedCurrentFinder}" />
    </Grid>
  </Grid>
</UserControl>
