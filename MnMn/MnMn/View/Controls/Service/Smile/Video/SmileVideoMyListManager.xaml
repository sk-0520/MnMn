<UserControl 
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video.SmileVideoMyListManager"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  
  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=SharedLibrary"
  xmlns:app_view_contrls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"
  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"
  xmlns:app_view_converter_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter.Service.Smile.Video"
  xmlns:app_view_contrls_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video"
  
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
  mc:Ignorable="d" 
  d:DesignHeight="300" d:DesignWidth="300"
>
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <cttn_sl_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />
    <app_view_converter:LoadStateIsLoadedConverter x:Key="LoadStateIsLoadedConverter" />
    <app_view_converter:LoadStateIsNotLoadedConverter x:Key="LoadStateIsNotLoadedConverter" />
    <app_view_converter_service_smile_video:MyLIstFolderIdToIdConverter x:Key="MyLIstFolderIdToIdConverter" />
    <app_view_converter_service_smile_video:MyLIstFolderIdToColorConverter x:Key="MyLIstFolderIdToColorConverter" />

    <Style x:Key="MyListBox" TargetType="ListBox">
      <Setter Property="SelectedItem" Value="{Binding DataContext.SelectedFinder, RelativeSource={RelativeSource AncestorType=UserControl}}" />
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <VirtualizingStackPanel />
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="ItemTemplate">
        <Setter.Value>
          <DataTemplate>
            <StackPanel>
              <Rectangle Width="16" Height="16">
                <Rectangle.Fill>
                  <SolidColorBrush Color="{Binding MyListFolderColor}" />
                </Rectangle.Fill>
              </Rectangle>
              <TextBlock Text="{Binding MyListName}" />
              <TextBlock>
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Style.Triggers>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding FinderLoadState, Converter={StaticResource LoadStateIsNotLoadedConverter}}" Value="True"  />
                          <Condition Binding="{Binding MyListItemCount}" Value="0" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Text" Value="not loaded" />
                      </MultiDataTrigger>
                    </Style.Triggers>
                    <!-- TODO: ただ単に0件もあるので条件が甘い。でもそこまで必須じゃないので後回し -->
                    <Setter Property="Text" Value="{Binding MyListItemCount}" />
                  </Style>
                </TextBlock.Style>
              </TextBlock>
              <TextBlock Visibility="{Binding IsAccountMyList, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Run Text="type:" />
                <Run>
                  <Run.Style>
                    <Style TargetType="Run">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPublic}" Value="True">
                          <Setter Property="Text" Value="public" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPublic}" Value="False">
                          <Setter Property="Text" Value="private" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Run.Style>
                </Run>
              </TextBlock>

            </StackPanel>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition />
      <ColumnDefinition Width="4" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>

    <Grid Grid.Column="0">
      <TabControl>
        <TabItem Header="account">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <Button Command="{Binding LoadAccountMyListCommand}">load</Button>
              <Button Command="{Binding RemoveSelectedAccountMyListCommand}">remove</Button>
            </ToolBar>
            <Expander DockPanel.Dock="Bottom" Header="edit" Visibility="{Binding SelectedAccountFinder.CanEdit, Converter={StaticResource BooleanToVisibilityConverter}}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="name" />
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding SelectedAccountFinder.EditingMyListName, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="icon" />
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding FolderIdColors}" SelectedValue="{Binding SelectedAccountFinder.EditingMyListFolderIdElement}" >
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <Rectangle Height="16" Width="16">
                        <Rectangle.Fill>
                          <SolidColorBrush Color="{Binding Converter={StaticResource MyLIstFolderIdToColorConverter}}" />
                        </Rectangle.Fill>
                      </Rectangle>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="type" />
                <CheckBox Grid.Row="2" Grid.Column="1" Content="public" IsChecked="{Binding SelectedAccountFinder.EditingMyListIsPublic}"/>

                <GroupBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" >
                  <TextBox Text="{Binding SelectedAccountFinder.EditingMyListDescription, UpdateSourceTrigger=PropertyChanged}"/>
                </GroupBox>

                <Button Grid.Row="4" Grid.Column="0" Content="save" Command="{Binding SaveEditCommand}" CommandParameter="{Binding SelectedAccountFinder}" IsEnabled="{Binding SelectedAccountFinder.IsEditing}" />
                <Button Grid.Row="4" Grid.Column="1" Content="cancel" Command="{Binding SelectedAccountFinder.CancelEditCommand}" IsEnabled="{Binding SelectedAccountFinder.IsEditing}"/>

              </Grid>
            </Expander>
            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedAccountFinder}" ItemsSource="{Binding AccountMyListItems}" />
          </DockPanel>
        </TabItem>

        <TabItem Header="search">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <TextBox Text="{Binding InputSearchMyList}" />
              <Button Command="{Binding SearchUserMyListCommand}">find</Button>
            </ToolBar>

            <!--<app_view_contrls:Pager
              DockPanel.Dock="Bottom"
              PageItems="{Binding SearchItems}"
              Command="{Binding DataContext.SearchUserMyListPageChangeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
            />-->
            <ItemsControl  DockPanel.Dock="Bottom" ItemsSource="{Binding SearchItems}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Button
                      Content="{Binding PageNumber }"
                      Command="{Binding DataContext.SearchUserMyListPageChangeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                      CommandParameter="{Binding }"
                    />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedSearchFinder}" ItemsSource="{Binding SearchUserMyListItems}" />

          </DockPanel>

        </TabItem>

        <TabItem Header="local">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <Button Command="{Binding LoadLocalUserMyListCommand}">load</Button>
              <Button Command="{Binding RemoveSelectedLocalUserMyListCommand}">remove</Button>
            </ToolBar>
            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedLocalFinder}" ItemsSource="{Binding LocalUserMyListItems}" />
          </DockPanel>
        </TabItem>

        <TabItem Header="hist">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <Button Command="{Binding LoadHistoryUserMyListCommand}">load</Button>
              <Button Command="{Binding RemoveSelectedHistoryUserMyListCommand}">remove</Button>
            </ToolBar>
            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedHistoryFinder}" ItemsSource="{Binding HistoryUserMyListItems}" />
          </DockPanel>
        </TabItem>

      </TabControl>


    </Grid>


    <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

    <Grid Grid.Column="2">
      <app_view_contrls_service_smile_video:SmileVideoFinderControl DataContext="{Binding SelectedCurrentFinder}" />
    </Grid>
  </Grid>
</UserControl>
