<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"

  xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"

  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
  xmlns:mamc="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"

  xmlns:app="clr-namespace:ContentTypeTextNet.MnMn.MnMn"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"
  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"

>
  <!--<ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
  </ResourceDictionary.MergedDictionaries>-->

  <!-- ============== 規定値 ============== -->

  <sys:Double x:Key="GridSplitterLength">4</sys:Double>
  <Thickness x:Key="ItemMargin">1,1,2,1</Thickness>
  <sys:Double x:Key="BaseMargin">8</sys:Double>
  <Thickness x:Key="LeftMargin" Left="{StaticResource BaseMargin}" Top="0" Right="0" Bottom="0" />
  <Thickness x:Key="TopMargin" Left="0" Top="{StaticResource BaseMargin}" Right="0" Bottom="0" />
  <Thickness x:Key="RightMargin" Left="0" Top="0" Right="{StaticResource BaseMargin}" Bottom="0" />
  <Thickness x:Key="BottomMargin" Left="0" Top="0" Right="0" Bottom="{StaticResource BaseMargin}" />
  <Thickness x:Key="VericalMargin" Left="0" Top="{StaticResource BaseMargin}" Right="0" Bottom="{StaticResource BaseMargin}" />
  <Thickness x:Key="HorizonMargin" Left="{StaticResource BaseMargin}" Top="0" Right="{StaticResource BaseMargin}" Bottom="0" />
  <Thickness x:Key="BasePadding" Left="4" Top="4" Right="4" Bottom="4" />

  <sys:Double x:Key="FontSmallSize">10</sys:Double>
  <sys:Double x:Key="FontBaseSize">12</sys:Double>
  <sys:Double x:Key="FontBigSize">14</sys:Double>
  <sys:Double x:Key="FontLargeSize">16</sys:Double>

  <!-- LoadState -->
  <Color x:Key="LoadState_None">Gray</Color>
  <Color x:Key="LoadState_Preparation">Orange</Color>
  <Color x:Key="LoadState_Loading">Yellow</Color>
  <Color x:Key="LoadState_Loaded">Lime</Color>
  <Color x:Key="LoadState_Failure">Red</Color>

  <!-- SourceLoadState -->
  <Color x:Key="SourceLoadState_None">Gray</Color>
  <Color x:Key="SourceLoadState_SourceLoading">Orange</Color>
  <Color x:Key="SourceLoadState_SourceChecking">Pink</Color>
  <Color x:Key="SourceLoadState_InformationLoading">Yellow</Color>
  <Color x:Key="SourceLoadState_Completed">Lime</Color>
  <Color x:Key="SourceLoadState_Failure">Red</Color>

  <!-- TextBox -->
  <Thickness x:Key="TextBoxPadding">2</Thickness>

  <sys:Double x:Key="MinimumIconWidth">12</sys:Double>
  <sys:Double x:Key="MinimumIconHeight">12</sys:Double>

  <sys:Double x:Key="SmallIconWidth">16</sys:Double>
  <sys:Double x:Key="SmallIconHeight">16</sys:Double>

  <sys:Double x:Key="NormalIconWidth">24</sys:Double>
  <sys:Double x:Key="NormalIconHeight">24</sys:Double>

  <sys:Double x:Key="BigIconWidth">32</sys:Double>
  <sys:Double x:Key="BigIconHeight">32</sys:Double>

  <sys:Double x:Key="LargeIconWidth">48</sys:Double>
  <sys:Double x:Key="LargeIconHeight">48</sys:Double>

  <!-- ============== スタイル ==============  -->
  <!-- ViewBox -->
  <Style x:Key="IconBox" TargetType="Viewbox">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Stretch" Value="UniformToFill" />
  </Style>

  <Style x:Key="MinimumIconBox" TargetType="Viewbox" BasedOn="{StaticResource IconBox}">
    <Setter Property="Width" Value="{StaticResource MinimumIconWidth}" />
    <Setter Property="Height" Value="{StaticResource MinimumIconHeight}" />
  </Style>
  <Style x:Key="MinimumItemBox" TargetType="Viewbox" BasedOn="{StaticResource MinimumIconBox}">
    <Setter Property="Margin" Value="{StaticResource ItemMargin}" />
  </Style>

  <Style x:Key="SmallIconBox" TargetType="Viewbox" BasedOn="{StaticResource IconBox}">
    <Setter Property="Width" Value="{StaticResource SmallIconWidth}" />
    <Setter Property="Height" Value="{StaticResource SmallIconHeight}" />
  </Style>
  <Style x:Key="SmallAppendIconBox" TargetType="Viewbox" BasedOn="{StaticResource IconBox}">
    <Setter Property="Canvas.Left" Value="4" />
    <Setter Property="Canvas.Top" Value="4" />
    <Setter Property="Width" Value="20" />
    <Setter Property="Height" Value="20" />
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect BlurRadius="0" Direction="315" ShadowDepth="2" Color="{DynamicResource WhiteColor}" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SmallItemBox" TargetType="Viewbox" BasedOn="{StaticResource SmallIconBox}">
    <Setter Property="Margin" Value="{StaticResource ItemMargin}" />
  </Style>

  <Style x:Key="NormalIconBox" TargetType="Viewbox" BasedOn="{StaticResource IconBox}">
    <Setter Property="Width" Value="{StaticResource NormalIconWidth}" />
    <Setter Property="Height" Value="{StaticResource NormalIconHeight}" />
  </Style>
  <Style x:Key="NormalItemBox" TargetType="Viewbox" BasedOn="{StaticResource NormalIconBox}">
    <Setter Property="Margin" Value="{StaticResource ItemMargin}" />
  </Style>

  <Style x:Key="BigIconBox" TargetType="Viewbox" BasedOn="{StaticResource IconBox}">
    <Setter Property="Width" Value="{StaticResource BigIconWidth}" />
    <Setter Property="Height" Value="{StaticResource BigIconHeight}" />
  </Style>
  <Style x:Key="BigItemBox" TargetType="Viewbox" BasedOn="{StaticResource BigIconBox}">
    <Setter Property="Margin" Value="{StaticResource ItemMargin}" />
  </Style>

  <Style x:Key="LargeIconBox" TargetType="Viewbox" BasedOn="{StaticResource IconBox}">
    <Setter Property="Width" Value="{StaticResource LargeIconWidth}" />
    <Setter Property="Height" Value="{StaticResource LargeIconHeight}" />
  </Style>
  <Style x:Key="LargeItemBox" TargetType="Viewbox" BasedOn="{StaticResource LargeItemBox}">
    <Setter Property="Margin" Value="{StaticResource ItemMargin}" />
  </Style>

  <!-- Canvas -->
  <!-- 元データが 24 x 24 の描画領域 -->
  <Style x:Key="IconCanvas-24x24" TargetType="Canvas">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Width" Value="24" />
    <Setter Property="Height" Value="24" />
    <Setter Property="Background" Value="Transparent" />
  </Style>

  <!-- Path -->
  <Style x:Key="IconPath" TargetType="Path">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="SnapsToDevicePixels" Value="True" />
  </Style>

  <Style x:Key="MinimumDefaultIconPath" TargetType="Path" BasedOn="{StaticResource IconPath}">
    <Setter Property="Fill" Value="{DynamicResource LabelTextBrush}" />
    <!--<Setter Property="Stroke" Value="{DynamicResource WhiteBrush}" />-->
  </Style>

  <Style x:Key="MinimumAccentIconPath" TargetType="Path" BasedOn="{StaticResource IconPath}">
    <Setter Property="Fill" Value="{DynamicResource AccentBaseColorBrush}" />
    <!--<Setter Property="Stroke" Value="{DynamicResource WhiteBrush}" />-->
  </Style>

  <Style x:Key="MinimumLinkIconPath" TargetType="Path" BasedOn="{StaticResource IconPath}">
    <Setter Property="Fill" Value="{DynamicResource AccentBaseColorBrush}" />
    <!--<Setter Property="Stroke" Value="{DynamicResource WhiteBrush}" />-->
  </Style>

  <Style x:Key="SmallDefaultIconPath" TargetType="Path" BasedOn="{StaticResource IconPath}">
    <Setter Property="Fill" Value="{DynamicResource LabelTextBrush}" />
    <!--<Setter Property="Stroke" Value="{DynamicResource WhiteBrush}" />-->
  </Style>

  <Style x:Key="SmallAccentIconPath" TargetType="Path" BasedOn="{StaticResource IconPath}">
    <Setter Property="Fill" Value="{DynamicResource AccentBaseColorBrush}" />
    <!--<Setter Property="Stroke" Value="{DynamicResource WhiteBrush}" />-->
  </Style>

  <Style x:Key="SmallLinkIconPath" TargetType="Path" BasedOn="{StaticResource IconPath}">
    <Setter Property="Fill" Value="{DynamicResource AccentBaseColorBrush}" />
    <!--<Setter Property="Stroke" Value="{DynamicResource WhiteBrush}" />-->
  </Style>

  <!-- ================ Common Icon ================ -->
  <!-- https://materialdesignicons.com/icon/plus -->
  <Geometry x:Key="Image_Add">M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z</Geometry>
  <!-- https://materialdesignicons.com/icon/arrow-right-bold -->
  <Geometry x:Key="Image_Insert">M4,10V14H13L9.5,17.5L11.92,19.92L19.84,12L11.92,4.08L9.5,6.5L13,10H4Z</Geometry>
  <!-- https://materialdesignicons.com/icon/close -->
  <Geometry x:Key="Image_Remove">M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z</Geometry>
  <!-- https://materialdesignicons.com/icon/arrow-left-bold -->
  <Geometry x:Key="Image_Back">M20,10V14H11L14.5,17.5L12.08,19.92L4.16,12L12.08,4.08L14.5,6.5L11,10H20Z</Geometry>

  <!-- https://materialdesignicons.com/icon/arrow-left-drop-circle-outline -->
  <Geometry x:Key="Image_ItemLeft">M22,12A10,10 0 0,0 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12M14,7L9,12L14,17V7Z</Geometry>
  <!-- https://materialdesignicons.com/icon/arrow-right-drop-circle-outline -->
  <Geometry x:Key="Image_ItemRight">M2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2A10,10 0 0,0 2,12M4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12M10,17L15,12L10,7V17Z</Geometry>
  <!-- https://materialdesignicons.com/icon/arrow-up-drop-circle-outline -->
  <Geometry x:Key="Image_ItemUp">M12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M17,14L12,9L7,14H17Z</Geometry>
  <!-- https://materialdesignicons.com/icon/arrow-down-drop-circle-outline -->
  <Geometry x:Key="Image_ItemDown">M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M7,10L12,15L17,10H7Z</Geometry>

  <!-- https://materialdesignicons.com/icon/chevron-left -->
  <Geometry x:Key="Image_ScrollLeft">M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z</Geometry>
  <!--  https://materialdesignicons.com/icon/chevron-right -->
  <Geometry x:Key="Image_ScrollRight">M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z</Geometry>
  <!-- https://materialdesignicons.com/icon/chevron-up -->
  <Geometry x:Key="Image_ScrollUp">M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z</Geometry>
  <!-- https://materialdesignicons.com/icon/chevron-down -->
  <Geometry x:Key="Image_ScrollDown">M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z</Geometry>

  <!-- https://materialdesignicons.com/icon/arrow-right-bold-circle-outline  -->
  <Geometry x:Key="Image_NavigationNext">M17,12L12,17V14H8V10H12V7L17,12M2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12M4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12Z</Geometry>
  <!--  https://materialdesignicons.com/icon/arrow-left-bold-circle-outline -->
  <Geometry x:Key="Image_NavigationPrev">M7,12L12,7V10H16V14H12V17L7,12M22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12M20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12Z</Geometry>
  <!-- https://materialdesignicons.com/icon/arrow-right-bold-circle  -->
  <Geometry x:Key="Image_NavigationGo">M2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12M17,12L12,7V10H8V14H12V17L17,12Z</Geometry>

  <!-- https://materialdesignicons.com/icon/magnify -->
  <Geometry x:Key="Image_Search">M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z</Geometry>

  <!-- https://materialdesignicons.com/icon/sort-ascending -->
  <Geometry x:Key="Image_OrderAscending">M10,11V13H18V11H10M10,5V7H14V5H10M10,17V19H22V17H10M6,7H8.5L5,3.5L1.5,7H4V20H6V7Z</Geometry>
  <!-- https://materialdesignicons.com/icon/sort-descending -->
  <Geometry x:Key="Image_OrderDescending">M10,13V11H18V13H10M10,19V17H14V19H10M10,7V5H22V7H10M6,17H8.5L5,20.5L1.5,17H4V4H6V17Z</Geometry>

  <!-- https://materialdesignicons.com/icon/tag-text-outline -->
  <Geometry x:Key="Image_Tag">M5.5,7A1.5,1.5 0 0,0 7,5.5A1.5,1.5 0 0,0 5.5,4A1.5,1.5 0 0,0 4,5.5A1.5,1.5 0 0,0 5.5,7M21.41,11.58C21.77,11.94 22,12.44 22,13C22,13.55 21.78,14.05 21.41,14.41L14.41,21.41C14.05,21.77 13.55,22 13,22C12.45,22 11.95,21.77 11.58,21.41L2.59,12.41C2.22,12.05 2,11.55 2,11V4C2,2.89 2.89,2 4,2H11C11.55,2 12.05,2.22 12.41,2.58L21.41,11.58M13,20L20,13L11.5,4.5L4.5,11.5L13,20M10.09,8.91L11.5,7.5L17,13L15.59,14.41L10.09,8.91M7.59,11.41L9,10L13,14L11.59,15.41L7.59,11.41Z</Geometry>
  <!-- https://materialdesignicons.com/icon/alphabetical -->
  <Geometry x:Key="Image_Keyword">M6,11A2,2 0 0,1 8,13V17H4A2,2 0 0,1 2,15V13A2,2 0 0,1 4,11H6M4,13V15H6V13H4M20,13V15H22V17H20A2,2 0 0,1 18,15V13A2,2 0 0,1 20,11H22V13H20M12,7V11H14A2,2 0 0,1 16,13V15A2,2 0 0,1 14,17H12A2,2 0 0,1 10,15V7H12M12,15H14V13H12V15Z</Geometry>

  <!-- https://materialdesignicons.com/icon/bookmark -->
  <Geometry x:Key="Image_Bookmark">M17,3H7A2,2 0 0,0 5,5V21L12,18L19,21V5C19,3.89 18.1,3 17,3Z</Geometry>
  <!-- https://materialdesignicons.com/icon/bookmark-plus -->
  <Geometry x:Key="Image_Bookmark-Add">M17,3A2,2 0 0,1 19,5V21L12,18L5,21V5C5,3.89 5.9,3 7,3H17M11,7V9H9V11H11V13H13V11H15V9H13V7H11Z</Geometry>
  <!-- https://materialdesignicons.com/icon/bookmark-plus-outline -->
  <Geometry x:Key="Image_Bookmark-Insert">M17,18V5H7V18L12,15.82L17,18M17,3A2,2 0 0,1 19,5V21L12,18L5,21V5C5,3.89 5.9,3 7,3H17M11,7H13V9H15V11H13V13H11V11H9V9H11V7Z</Geometry>
  <!-- https://materialdesignicons.com/icon/bookmark-remove -->
  <Geometry x:Key="Image_Bookmark-Remove">M17,3A2,2 0 0,1 19,5V21L12,18L5,21V5C5,3.89 5.9,3 7,3H17M8.17,8.58L10.59,11L8.17,13.41L9.59,14.83L12,12.41L14.41,14.83L15.83,13.41L13.41,11L15.83,8.58L14.41,7.17L12,9.58L9.59,7.17L8.17,8.58Z</Geometry>

  <!-- https://materialdesignicons.com/icon/folder -->
  <Geometry x:Key="Image_Folder">M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z</Geometry>

  <!-- https://materialdesignicons.com/icon/fullscreen -->
  <Geometry x:Key="Image_FullScreen">M5,5H10V7H7V10H5V5M14,5H19V10H17V7H14V5M17,14H19V19H14V17H17V14M10,17V19H5V14H7V17H10Z</Geometry>
  <!-- https://materialdesignicons.com/icon/fullscreen-exit -->
  <Geometry x:Key="Image_FullScreen-Exit">M14,14H19V16H16V19H14V14M5,14H10V19H8V16H5V14M8,5H10V10H5V8H8V5M19,8V10H14V5H16V8H19Z</Geometry>

  <!-- https://materialdesignicons.com/icon/lock-outline -->
  <Geometry x:Key="Image_Lock">M12,17C10.89,17 10,16.1 10,15C10,13.89 10.89,13 12,13A2,2 0 0,1 14,15A2,2 0 0,1 12,17M18,20V10H6V20H18M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10C4,8.89 4.89,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z</Geometry>

  <!-- https://materialdesignicons.com/icon/book-open-page-variant -->
  <Geometry x:Key="Image_Book">M19,2L14,6.5V17.5L19,13V2M6.5,5C4.55,5 2.45,5.4 1,6.5V21.16C1,21.41 1.25,21.66 1.5,21.66C1.6,21.66 1.65,21.59 1.75,21.59C3.1,20.94 5.05,20.5 6.5,20.5C8.45,20.5 10.55,20.9 12,22C13.35,21.15 15.8,20.5 17.5,20.5C19.15,20.5 20.85,20.81 22.25,21.56C22.35,21.61 22.4,21.59 22.5,21.59C22.75,21.59 23,21.34 23,21.09V6.5C22.4,6.05 21.75,5.75 21,5.5V7.5L21,13V19C19.9,18.65 18.7,18.5 17.5,18.5C15.8,18.5 13.35,19.15 12,20V13L12,8.5V6.5C10.55,5.4 8.45,5 6.5,5V5Z</Geometry>

  <!-- https://materialdesignicons.com/icon/pin -->
  <Geometry x:Key="Image_Pin">M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z</Geometry>

  <!-- ============ 完結させられる図形 ============= -->
  <!-- ぼやけるーん
  <Style x:Key="Icon_AddBookmark" TargetType="ContentControl">
    <Style.Resources>
      <cttn_sl_view_converter:ComplementaryColorConverter x:Key="ComplementaryColorConverter" />
    </Style.Resources>
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Content">
      <Setter.Value>
        <Canvas Style="{StaticResource IconCanvas-24x24}">
          <Canvas Style="{StaticResource IconCanvas-24x24}">
            <Path Data="{StaticResource Image_Bookmark}" Style="{StaticResource SmallDefaultIconPath}" />
          </Canvas>
          <Viewbox Style="{StaticResource SmallAppendIconBox}">
            <Canvas Style="{StaticResource IconCanvas-24x24}">
              <Path Data="{StaticResource Image_Add}" Style="{StaticResource IconPath}" Fill="{DynamicResource AccentBaseColorBrush}"  />
            </Canvas>
          </Viewbox>
        </Canvas>
      </Setter.Value>
    </Setter>
  </Style>-->

  <!-- ================ Controls ================ -->
  <!-- 独自ウィンドウ -->
  <Style TargetType="mamc:MetroWindow" >
    <Setter Property="WindowStyle" Value="None" />
    <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
    <!--<Setter Property="AllowsTransparency" Value="False" />-->
    <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontSize" Value="{StaticResource FontBaseSize}" />
    <Setter Property="TitleCharacterCasing" Value="Normal" />
  </Style>

  <!--Button -->
  <Style x:Key="ReloadButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Content" Value="↻" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="MinWidth" Value="0" />
    <!--なんできえるかねー-->
    <!--
    <Setter Property="Content">
      <Setter.Value>
        <Viewbox Style="{StaticResource SmallIconBox}">
          <Canvas Style="{StaticResource IconCanvas-24x24}">
            -->
    <!-- https://materialdesignicons.com/icon/reload -->
    <!--
            <Path Data="M19,12H22.32L17.37,16.95L12.42,12H16.97C17,10.46 16.42,8.93 15.24,7.75C12.9,5.41 9.1,5.41 6.76,7.75C4.42,10.09 4.42,13.9 6.76,16.24C8.6,18.08 11.36,18.47 13.58,17.41L15.05,18.88C12,20.69 8,20.29 5.34,17.65C2.22,14.53 2.23,9.47 5.35,6.35C8.5,3.22 13.53,3.21 16.66,6.34C18.22,7.9 19,9.95 19,12Z" Style="{StaticResource SmallDefaultIconPath}" />
          </Canvas>
        </Viewbox>
      </Setter.Value>
    </Setter>-->
  </Style>

  <!-- RepeatButton -->
  <Style x:Key="ScrollButton" TargetType="RepeatButton" BasedOn="{StaticResource {x:Type RepeatButton}}">
    <Setter Property="Focusable" Value="False" />
  </Style>

  <!-- GridSplitter -->
  <Style TargetType="GridSplitter">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Background" Value="{DynamicResource SeperatorBrush}"/>
  </Style>
  <Style x:Key="DefaultVericalGridSplitter" BasedOn="{StaticResource {x:Type GridSplitter}}" TargetType="GridSplitter">
    <Setter Property="Width" Value="{StaticResource GridSplitterLength}" />
  </Style>
  <Style x:Key="DefaultHorizonGridSplitter" BasedOn="{StaticResource {x:Type GridSplitter}}" TargetType="GridSplitter">
    <Setter Property="Height" Value="{StaticResource GridSplitterLength}" />
  </Style>

  <!--Image -->
  <Style TargetType="Image">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Stretch" Value="UniformToFill" />
  </Style>

  <Style x:Key="ItemImage" TargetType="Image" BasedOn="{StaticResource {x:Type Image}}">
    <Setter Property="Margin" Value="{StaticResource ItemMargin}" />
  </Style>

  <Style x:Key="SmallIconImage" TargetType="Image" BasedOn="{StaticResource {x:Type Image}}">
    <Setter Property="Width" Value="{StaticResource SmallIconWidth}" />
    <Setter Property="Height" Value="{StaticResource SmallIconHeight}" />
  </Style>
  <Style x:Key="SmallItemImage" TargetType="Image" BasedOn="{StaticResource ItemImage}">
    <Setter Property="Width" Value="{StaticResource SmallIconWidth}" />
    <Setter Property="Height" Value="{StaticResource SmallIconHeight}" />
  </Style>

  <!--ListBox -->
  <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
  </Style>

  <!--Menu -->
  <Style x:Key="ToolbarMenu" TargetType="Menu" BasedOn="{StaticResource {x:Type Menu}}" />

  <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>

  <Style x:Key="ToolbarMenuItem" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" />

  <!--SourceLoadState -->
  <Style x:Key="SmallItemSourceLoadState" TargetType="app_view_controls:SourceLoadStateNavigator">
    <Setter Property="Margin" Value="{StaticResource ItemMargin}" />
    <Setter Property="Width" Value="8" />
    <Setter Property="Height" Value="8" />
  </Style>

  <!--TabDictionary-->
  <Style x:Key="TabReloadButton" TargetType="Button" BasedOn="{StaticResource ReloadButton}">
    <Setter Property="Command" Value="{Binding ReloadCommand}" />
    <Setter Property="IsEnabled" Value="{Binding CanLoad}" />
  </Style>

  <Style x:Key="TabHeader" TargetType="StackPanel">
    <Setter Property="Orientation" Value="Horizontal" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="TabHeaderText" TargetType="TextBlock">
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <Style x:Key="TabCloseButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Style.Resources>
      <sys:Double x:Key="length">18</sys:Double>
    </Style.Resources>
    <Setter Property="Tag" Value="{x:Static app:Constants.TagTabCloseButton}" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="2,0,0,0" />
    <Setter Property="Padding" Value="1" />
    <!--
    <Setter Property="FontFamily" Value="Webdings" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="Content" Value="r" />
    -->
    <Setter Property="FontSize" Value="7" />
    <Setter Property="Content" Value="❌"/>
    <Setter Property="Width" Value="{StaticResource length}"/>
    <Setter Property="Height" Value="{StaticResource length}"/>
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="MinWidth" Value="0" />

    <Setter Property="Command" Value="{Binding DataContext.CloseTabCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
    <Setter Property="CommandParameter" Value="{Binding}" />
  </Style>

  <!--TextBox -->
  <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    <!--<Style.Triggers>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </Trigger>
    </Style.Triggers>-->
    <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
  </Style>

  <!-- 検索 -->
  <Style x:Key="SearchTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    <Style.Resources>
    </Style.Resources>
    <Setter Property="mamc:TextBoxHelper.ClearTextButton" Value="True" />
    <Setter Property="mamc:TextBoxHelper.TextButton" Value="True" />
    <Setter Property="mamc:TextBoxHelper.ButtonContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Viewbox Style="{StaticResource SmallIconBox}">
            <Canvas Style="{StaticResource IconCanvas-24x24}">
              <Path Data="{StaticResource Image_Search}" Fill="{DynamicResource TextBrush}" />
            </Canvas>
          </Viewbox>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TabControl -->
  <Style TargetType="TabControl" BasedOn="{StaticResource {x:Type TabControl}}">
    <Setter Property="Padding" Value="0" />
  </Style>

  <Style x:Key="SectionTabControl" TargetType="TabControl" BasedOn="{StaticResource {x:Type TabControl}}">
    <Setter Property="TabStripPlacement" Value="Left" />
  </Style>

  <Style TargetType="TabPanel">
    <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
  </Style>

  <!-- TabItem -->
  <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabItem">
          <Border x:Name="Border"
            HorizontalAlignment="Stretch"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
          >
            <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <DockPanel.Resources>
                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
              </DockPanel.Resources>
              <Rectangle x:Name="Underline"
                Height="2"
                Margin="0 1 0 0"
                HorizontalAlignment="Stretch"
                DockPanel.Dock="Bottom"
                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=(mamc:TabControlHelper.IsUnderlined), Converter={StaticResource BooleanToVisibilityConverter}}"
              />
              <mamc:ContentControlEx x:Name="ContentSite"
                Padding="{TemplateBinding Padding}"
                Foreground="{TemplateBinding Foreground}"
                FontSize="{TemplateBinding mamc:ControlsHelper.HeaderFontSize}"
                FontWeight="{TemplateBinding mamc:ControlsHelper.HeaderFontWeight}"
                FontStretch="{TemplateBinding mamc:ControlsHelper.HeaderFontStretch}"
                Content="{TemplateBinding Header}"
                ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mamc:ControlsHelper.ContentCharacterCasing)}"
                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                ContentTemplate="{TemplateBinding HeaderTemplate}"
                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="ContentSite" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="Underline" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="Underline" Property="Height" Value="Auto" />
              <Setter TargetName="Underline" Property="Margin" Value="1 0 0 0" />
              <Setter TargetName="Underline" Property="Width" Value="2" />
              <Setter TargetName="Border" Property="BorderThickness" Value="0,1,3,1" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Top">
              <Setter TargetName="ContentSite" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="Underline" Property="DockPanel.Dock" Value="Bottom" />
              <Setter TargetName="Underline" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="Underline" Property="Height" Value="2" />
              <Setter TargetName="Underline" Property="Margin" Value="0 1 0 0" />
              <Setter TargetName="Underline" Property="Width" Value="Auto" />
              <Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,3" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="ContentSite" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="Underline" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="Underline" Property="Height" Value="Auto" />
              <Setter TargetName="Underline" Property="Margin" Value="0 0 1 0" />
              <Setter TargetName="Underline" Property="Width" Value="2" />
              <Setter TargetName="Border" Property="BorderThickness" Value="3,1,0,1" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentSite" Property="DockPanel.Dock" Value="Bottom" />
              <Setter TargetName="Underline" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="Underline" Property="Height" Value="2" />
              <Setter TargetName="Underline" Property="Margin" Value="0 0 0 1" />
              <Setter TargetName="Underline" Property="Width" Value="Auto" />
              <Setter TargetName="Border" Property="BorderThickness" Value="1,3,1,0" />
            </Trigger>

            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush2}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
              <Setter TargetName="Underline" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <!--<Trigger Property="IsSelected" Value="false">
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource GrayNormalBrush}" />
              <Setter TargetName="Underline" Property="Fill" Value="{DynamicResource GrayNormalBrush}" />
            </Trigger>-->
            <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush4}" />
              <!--<Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource GrayHoverBrush}" />-->
              <Setter TargetName="Underline" Property="Fill" Value="{DynamicResource GrayHoverBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="ContentSite" Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <!--<Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource HighlightBrush}" />-->
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush3}" />
              <Setter TargetName="Underline" Property="Fill" Value="{DynamicResource HighlightBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="Transparent" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush4}" />
              <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource GrayNormalBrush}" />
              <Setter TargetName="Underline" Property="Fill" Value="{DynamicResource GrayHoverBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="mamc:ControlsHelper.HeaderFontSize" Value="{StaticResource FontBaseSize}" />
    <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
  </Style>

  <Style x:Key="SectionTabItem" TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
    <Setter Property="mamc:ControlsHelper.HeaderFontSize" Value="{StaticResource FontLargeSize}" />
  </Style>

  <Style x:Key="ParentItemLikeText" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" />
    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.FontSize)}" />
  </Style>

  <Style TargetType="Hyperlink" BasedOn="{StaticResource {x:Type Hyperlink}}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource HighlightColorBrush}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
    <Setter Property="TextDecorations" Value="Underline" />
  </Style>

  <!-- Label -->
  <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
    <!--<Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.FontSize)}" />-->
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <!--CheckBox-->
  <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <Style x:Key="VerticalCheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
    <Setter Property="Margin" Value="{StaticResource BottomMargin}" />
  </Style>
  <Style x:Key="HorizontalCheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
    <Setter Property="Margin" Value="{StaticResource RightMargin}" />
  </Style>

  <!-- RadioButton -->
  <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <Style x:Key="VerticalRadioButton" TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
    <Setter Property="Margin" Value="{StaticResource BottomMargin}" />
  </Style>
  <Style x:Key="HorizontalRadioButton" TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
    <Setter Property="Margin" Value="{StaticResource RightMargin}" />
  </Style>


  <!-- Flyout -->
  <Style x:Key="FinderFlyout" TargetType="mamc:Flyout">
    <Setter Property="Theme" Value="Inverse" />
    <Setter Property="Position" Value="Right" />
    <!--<Setter Property="IsAutoCloseEnabled" Value="True" />-->
  </Style>

  <!-- DropDownButton -->
  <Style TargetType="xctk:DropDownButton">
    <!--<Setter Property="IsOpen" Value="{Binding IsMenuOpen, Mode=TwoWay}" />-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
          <ControlTemplate.Resources>
            <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
            <cttn_sl_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />
          </ControlTemplate.Resources>
          <Grid x:Name="MainGrid" SnapsToDevicePixels="True" ShowGridLines="True">
            <ToggleButton
              x:Name="PART_DropDownButton"
              VerticalAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              HorizontalAlignment="Stretch"
              HorizontalContentAlignment="Stretch"
              IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
              Margin="0"
              Padding="0"
              IsHitTestVisible="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource LogicalNotConverter}}"
            >
              <Grid  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ContentPresenter
                  Name="ActionButtonContent"
                  Grid.Column="0"
                  Margin="{TemplateBinding Padding}"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  RecognizesAccessKey="true"
                />
                <Path
                  x:Name="BtnArrow"
                  Grid.Column="1"
                  Margin="4,3,4,3"
                  Width="8"
                  Height="8"
                  HorizontalAlignment="Center"
                  Fill="{DynamicResource GrayBrush1}"
                  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                  IsHitTestVisible="false"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  Stretch="Uniform"
                />
              </Grid>
            </ToggleButton>
            <!-- MENU -->
            <Popup x:Name="PART_Popup" StaysOpen="False" IsOpen="{TemplateBinding IsOpen}">
              <ContentPresenter Content="{TemplateBinding DropDownContent}" />
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ToggleButton -->
  <Style x:Key="OrderAscendingButton" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="False">
        <Setter Property="Content">
          <Setter.Value>
            <Viewbox Style="{StaticResource SmallIconBox}">
              <Canvas Style="{StaticResource IconCanvas-24x24}">
                <Path Data="{StaticResource Image_OrderDescending}" Style="{StaticResource SmallDefaultIconPath}" />
              </Canvas>
            </Viewbox>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Content">
      <Setter.Value>
        <Viewbox Style="{StaticResource SmallIconBox}">
          <Canvas Style="{StaticResource IconCanvas-24x24}">
            <Path Data="{StaticResource Image_OrderAscending}" Style="{StaticResource SmallDefaultIconPath}" />
          </Canvas>
        </Viewbox>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>