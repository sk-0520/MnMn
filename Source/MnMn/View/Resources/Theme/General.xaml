<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"

  xmlns:app="clr-namespace:ContentTypeTextNet.MnMn.MnMn"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"

>
  <!-- ============== 規定値 ============== -->

  <sys:Double x:Key="GridSplitterLength">4</sys:Double>

  <!-- LoadState -->
  <Color x:Key="LoadState_None">Gray</Color>
  <Color x:Key="LoadState_Preparation">Orange</Color>
  <Color x:Key="LoadState_Loading">Yellow</Color>
  <Color x:Key="LoadState_Loaded">Lime</Color>
  <Color x:Key="LoadState_Failure">Red</Color>

  <!-- SourceLoadState -->
  <Color x:Key="SourceLoadState_None">Gray</Color>
  <Color x:Key="SourceLoadState_SourceLoading">Orange</Color>
  <Color x:Key="SourceLoadState_SourceChecking">Pink</Color>
  <Color x:Key="SourceLoadState_InformationLoading">Yellow</Color>
  <Color x:Key="SourceLoadState_Completed">Lime</Color>
  <Color x:Key="SourceLoadState_Failure">Red</Color>

  <!-- TextBox -->
  <Thickness x:Key="TextBoxPadding" >2</Thickness>

  <sys:Double x:Key="SmallIconWidth">16</sys:Double>
  <sys:Double x:Key="SmallIconHeight">16</sys:Double>

  <!-- ============== スタイル ==============  -->
  <!-- ウィンドウ -->
  <Style TargetType="Window">
    <Setter Property="Background" Value="BurlyWood"/>
  </Style>

  <!-- 独自ウィンドウ -->
  <Style x:Key="WindowChromeButton" TargetType="Button">
    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}" />
    <Setter Property="FontFamily" Value="Marlett" />
    <Setter Property="IsTabStop" Value="False" />
  </Style>
  <Style x:Key="WindowChromeMinimum" TargetType="Button" BasedOn="{StaticResource WindowChromeButton}">
    <Setter Property="Content" Value="0" />
    <Setter Property="Command" Value="{Binding CaptionMinimumCommand}" />
  </Style>
  <Style x:Key="WindowChromeMaximum" TargetType="Button" BasedOn="{StaticResource WindowChromeButton}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding State}" Value="Normal">
        <Setter Property="Content" Value="1" />
        <Setter Property="Command" Value="{Binding CaptionMaximumCommand}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding State}" Value="Maximized">
        <Setter Property="Content" Value="2" />
        <Setter Property="Command" Value="{Binding CaptionRestoreCommand}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="WindowChromeClose" TargetType="Button" BasedOn="{StaticResource WindowChromeButton}">
    <Setter Property="Content" Value="r" />
    <Setter Property="Command" Value="{Binding CaptionCloseCommand}" />
  </Style>
  <Style x:Key="WindowChromeCaption" TargetType="ContentControl">
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" />
    <Setter Property="Margin" Value="4" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Content">
      <Setter.Value>
        <Grid>
          <Grid.Style>
            <Style TargetType="Grid">
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                  <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                  <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Grid.Style>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Button Grid.Column="0">
            <i:Interaction.Triggers>
              <i:EventTrigger EventName="MouseRightButtonDown">
                <i:InvokeCommandAction Command="{Binding ShowSystemMenuCommand}"/>
              </i:EventTrigger>
              <i:EventTrigger EventName="MouseDoubleClick">
                <i:InvokeCommandAction Command="{Binding CaptionCloseCommand}"/>
              </i:EventTrigger>
            </i:Interaction.Triggers>
            <Button.Template>
              <ControlTemplate>
                <Image Width="16" Height="16" WindowChrome.IsHitTestVisibleInChrome="True" Source="{Binding Icon, RelativeSource={RelativeSource AncestorType=Window}}" />
              </ControlTemplate>
            </Button.Template>
          </Button>
          <Grid Grid.Column="1" >
            <TextBlock VerticalAlignment="Center" FontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}" FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}" Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}" />
          </Grid>
          <StackPanel Grid.Column="2" Orientation="Horizontal">
            <Button Style="{StaticResource WindowChromeMinimum}"  />
            <Button Style="{StaticResource WindowChromeMaximum}" />
            <Button Style="{StaticResource WindowChromeClose}" />
          </StackPanel>
        </Grid>
      </Setter.Value>
    </Setter>
  </Style>

  <!--ButtonDictionary-->
  <Style x:Key="ReloadButton" TargetType="Button">
    <Setter Property="FontFamily" Value="Webdings" />
    <Setter Property="Content" Value="q" />
  </Style>

  <!-- GridSplitterDictionary -->
  <Style TargetType="GridSplitter">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="DefaultVericalGridSplitter" BasedOn="{StaticResource {x:Type GridSplitter}}" TargetType="GridSplitter">
    <Setter Property="Width" Value="{StaticResource GridSplitterLength}" />
  </Style>
  <Style x:Key="DefaultHorizonGridSplitter" BasedOn="{StaticResource {x:Type GridSplitter}}" TargetType="GridSplitter">
    <Setter Property="Height" Value="{StaticResource GridSplitterLength}" />
  </Style>

  <!--ImageDictionary-->
  <Style TargetType="Image">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Stretch" Value="None" />
  </Style>

  <Style x:Key="ItemImage" TargetType="Image" BasedOn="{StaticResource {x:Type Image}}">
    <Setter Property="Margin" Value="1,1,2,1" />
  </Style>

  <Style x:Key="SmallIconImage" TargetType="Image" BasedOn="{StaticResource {x:Type Image}}">
    <Setter Property="Width" Value="{StaticResource SmallIconWidth}" />
    <Setter Property="Height" Value="{StaticResource SmallIconHeight}" />
  </Style>
  <Style x:Key="SmallItemImage" TargetType="Image" BasedOn="{StaticResource ItemImage}">
    <Setter Property="Width" Value="{StaticResource SmallIconWidth}" />
    <Setter Property="Height" Value="{StaticResource SmallIconHeight}" />
  </Style>

  <!--ListBoxDictionary-->
  <Style TargetType="ListBox">
    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
  </Style>

  <!--MenuDictionary-->
  <Style TargetType="MenuItem">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>

  <!--SourceLoadStateDictionary-->
  <Style x:Key="TabSourceLoadState" TargetType="app_view_controls:SourceLoadStateNavigator">
    <Setter Property="Width" Value="8" />
    <Setter Property="Height" Value="8" />
  </Style>

  <Style x:Key="TabVideoSourceLoadState" TargetType="app_view_controls:SourceLoadStateNavigator" BasedOn="{StaticResource TabSourceLoadState}">
    <Setter Property="SourceLoadState" Value="{Binding FinderLoadState}" />
  </Style>

  <!--TabDictionary-->
  <Style x:Key="TabReloadButton" TargetType="Button" BasedOn="{StaticResource ReloadButton}">
    <Setter Property="Command" Value="{Binding ReloadCommand}" />
    <Setter Property="IsEnabled" Value="{Binding CanLoad}" />
  </Style>

  <Style x:Key="TabHeader" TargetType="StackPanel">
    <Setter Property="Orientation" Value="Horizontal" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="TabHeaderText" TargetType="TextBlock">
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <Style x:Key="TabCloseButton" TargetType="Button">
    <Setter Property="Tag" Value="{x:Static app:Constants.TagTabCloseButton}" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="2,0,-2,0" />
    <Setter Property="FontFamily" Value="Webdings" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="Content" Value="r" />
    <Setter Property="Command" Value="{Binding DataContext.CloseTabCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
    <Setter Property="CommandParameter" Value="{Binding}" />
  </Style>

  <!--TextBoxDictionary-->
  <Style TargetType="TextBox">
    <Style.Triggers>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
  </Style>

</ResourceDictionary>