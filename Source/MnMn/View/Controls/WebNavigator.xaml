<UserControl
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.WebNavigator"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:mamc="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"
  xmlns:app_logic="clr-namespace:ContentTypeTextNet.MnMn.MnMn.Logic"
  xmlns:app_define="clr-namespace:ContentTypeTextNet.MnMn.MnMn.Define"
  xmlns:app_data_browser="clr-namespace:ContentTypeTextNet.MnMn.MnMn.Data.WebNavigatorBridge"
  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="300"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
      <cttn_sl_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />
      <cttn_sl_view_converter:NegativeDoubleConverter x:Key="NegativeDoubleConverter" />
      <app_view_converter:DoubleToParameterPercentConverter x:Key="DoubleToParameterPercentConverter" />
    </ResourceDictionary>
  </UserControl.Resources>
  <UserControl.ContextMenu>
    <ContextMenu />
  </UserControl.ContextMenu>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <ToolBar Grid.Row="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"  Visibility="{Binding IsVisibleToolbar, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=UserControl}}">
      <ToolBar.Resources>
        <Style TargetType="ToolBarPanel">
          <Setter Property="Orientation" Value="Vertical"/>
        </Style>
      </ToolBar.Resources>
      <Grid>
        <Grid.Resources>
          <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Focusable" Value="False" />
          </Style>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Button Grid.Column="0" ToolTip="ホームへ" Command="{Binding HomeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Visibility="{Binding IsVisibleHome, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <Viewbox Style="{StaticResource SmallIconBox}">
            <Canvas Style="{StaticResource IconCanvas-24x24}">
              <Path Data="{StaticResource Image_Navigation_Home}" Style="{StaticResource SmallDefaultIconPath}" />
            </Canvas>
          </Viewbox>
        </Button>
        <Button Grid.Column="1" ToolTip="戻る" Command="{Binding BackCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <Viewbox Style="{StaticResource SmallIconBox}">
            <Canvas Style="{StaticResource IconCanvas-24x24}">
              <Path Data="{StaticResource Image_Navigation_Prev}" Style="{StaticResource SmallDefaultIconPath}" />
            </Canvas>
          </Viewbox>
        </Button>
        <Button Grid.Column="2" ToolTip="進む" Command="{Binding ForwardCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <Viewbox Style="{StaticResource SmallIconBox}">
            <Canvas Style="{StaticResource IconCanvas-24x24}">
              <Path Data="{StaticResource Image_Navigation_Next}" Style="{StaticResource SmallDefaultIconPath}" />
            </Canvas>
          </Viewbox>
        </Button>
        <Button Grid.Column="3" >
          <Button.Style>
            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsNavigating, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                  <Setter Property="ToolTip" Value="中止"/>
                  <Setter Property="Command" Value="{Binding StopDocumentCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                  <Setter Property="Content">
                    <Setter.Value>
                      <Viewbox Style="{StaticResource SmallIconBox}">
                        <Canvas Style="{StaticResource IconCanvas-24x24}">
                          <Path Data="{StaticResource Image_Stop}" Style="{StaticResource SmallDefaultIconPath}" />
                        </Canvas>
                      </Viewbox>
                    </Setter.Value>
                  </Setter>
                </DataTrigger>
              </Style.Triggers>
              <Setter Property="ToolTip" Value="更新"/>
              <Setter Property="Command" Value="{Binding ReloadDocumentCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
              <Setter Property="Content">
                <Setter.Value>
                  <Viewbox Style="{StaticResource SmallIconBox}">
                    <Canvas Style="{StaticResource IconCanvas-24x24}">
                      <Path Data="{StaticResource Image_Reload}" Style="{StaticResource SmallDefaultIconPath}" />
                    </Canvas>
                  </Viewbox>
                </Setter.Value>
              </Setter>
            </Style>
          </Button.Style>
        </Button>

        <TextBox x:Name="location" Grid.Column="4" mamc:TextBoxHelper.SelectAllOnFocus="True" IsReadOnly="{Binding IsEnabledUserChangeSource, Converter={StaticResource LogicalNotConverter}, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <TextBox.InputBindings>
            <KeyBinding Key="Return" Command="{Binding ChangeSourceCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
          </TextBox.InputBindings>
        </TextBox>

        <Button Grid.Column="5" ToolTip="移動" Command="{Binding ChangeSourceCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Visibility="{Binding IsEnabledUserChangeSource, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <Viewbox Style="{StaticResource SmallIconBox}">
            <Canvas Style="{StaticResource IconCanvas-24x24}">
              <Path Data="{StaticResource Image_Navigation_Go}" Style="{StaticResource SmallDefaultIconPath}" />
            </Canvas>
          </Viewbox>
        </Button>
        <Button Grid.Column="6" ToolTip="標準ブラウザで開く" Margin="{StaticResource LeftMargin}" Command="{Binding OpenDefaultBrowserCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Visibility="{Binding IsEnabledSystemBrowser, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <Viewbox Style="{StaticResource SmallIconBox}" SnapsToDevicePixels="True">
            <Image Source="{Binding DefaultBrowserIcon, RelativeSource={RelativeSource AncestorType=UserControl}}" />
          </Viewbox>
        </Button>
      </Grid>
    </ToolBar>

    <ContentControl x:Name="container" Grid.Row="1" />

    <Popup x:Name="popupGesture" IsHitTestVisible="False" Placement="Center" AllowsTransparency="True" PlacementTarget="{Binding ElementName=container}" MaxWidth="{Binding ActualWidth, ElementName=container, Converter={StaticResource DoubleToParameterPercentConverter}, ConverterParameter=0.5}">
      <Border CornerRadius="5" Padding="{StaticResource BasePadding}" Background="{DynamicResource AccentColorBrush}" TextElement.Foreground="{DynamicResource TextBrush}">
        <StackPanel>
          <TextBlock x:Name="textGesture" FontSize="14" FontWeight="Bold" TextAlignment="Center" Padding="{StaticResource BasePadding}" Background="{DynamicResource AccentBaseColorBrush}" />

          <ItemsControl Margin="{StaticResource AllMargin}" ItemsSource="{Binding GestureItems, RelativeSource={RelativeSource AncestorType=UserControl}}">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <Viewbox Style="{StaticResource NormalIconBox}" Margin="{StaticResource IndependentMargin}">
                  <Canvas Style="{StaticResource IconCanvas-24x24}">
                    <Path>
                      <Path.Style>
                        <Style TargetType="Path" BasedOn="{StaticResource NormalDefaultIconPath}">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Direction}" Value="Up">
                              <Setter Property="Data" Value="{StaticResource Image_Arrow-Up}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Direction}" Value="Down">
                              <Setter Property="Data" Value="{StaticResource Image_Arrow-Down}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Direction}" Value="Left">
                              <Setter Property="Data" Value="{StaticResource Image_Arrow-Left}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Direction}" Value="Right">
                              <Setter Property="Data" Value="{StaticResource Image_Arrow-Right}" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </Path.Style>
                    </Path>
                  </Canvas>
                </Viewbox>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </StackPanel>
      </Border>
    </Popup>

    <Popup x:Name="popupLinkState" AllowsTransparency="True" Placement="Bottom"  >
      <Border x:Name="contentLinkState" MouseEnter="contentLinkState_MouseEnter" TextElement.Foreground="{DynamicResource LabelTextBrush}" CornerRadius="3" Padding="3" BorderThickness="1" Background="{DynamicResource ControlBackgroundBrush}">
        <Border.BorderBrush>
          <SolidColorBrush Color="{DynamicResource MenuShadowColor}" />
        </Border.BorderBrush>
        <TextBlock x:Name="showLinkState" />
      </Border>
    </Popup>
  </Grid>
</UserControl>
