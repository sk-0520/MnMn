<!--
  呼び出し元から DataContext を設定して使用。
-->
<UserControl
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Setting.SmileSettingManager"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"

  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
  xmlns:mamc="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"

  xmlns:app="clr-namespace:ContentTypeTextNet.MnMn.MnMn"
  xmlns:app_define="clr-namespace:ContentTypeTextNet.MnMn.MnMn.Define"
  xmlns:app_define_ui_player="clr-namespace:ContentTypeTextNet.MnMn.MnMn.Define.UI.Player"
  xmlns:app_view_attachment="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Attachment"
  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"
  xmlns:app_view_controls_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="1200"
  d:DesignWidth="600"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
      <cttn_sl_view_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
      <app_view_converter:EnumDisplayConverter x:Key="EnumDisplayConverter" />
      <app_view_converter:HumanLikeByteConverter x:Key="HumanLikeByteConverter" />
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
      <StackPanel>
        <GroupBox Header="アカウント設定">
          <StackPanel>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>

              <Label Grid.Row="0" Grid.Column="0">メールアドレスまたは電話番号</Label>
              <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding EditingAccountName}" Style="{StaticResource VerticalTextBox}" />

              <Label Grid.Row="1" Grid.Column="0">パスワード</Label>
              <PasswordBox Grid.Row="1" Grid.Column="1"  Style="{StaticResource VerticalPasswordBox}" >
                <i:Interaction.Behaviors>
                  <app_view_attachment:PasswordBoxPasswordBehavior Password="{Binding EditingAccountPassword, Mode=TwoWay}" />
                </i:Interaction.Behaviors>
              </PasswordBox>

              <StackPanel Grid.Row="2">
                <Button HorizontalAlignment="Center" Style="{StaticResource Hyperlink}" Command="{Binding OpenUriCommand}" CommandParameter="{x:Static app:Constants.ServiceSmileAccountRegister}">会員登録</Button>
                <Button HorizontalAlignment="Center" Style="{StaticResource Hyperlink}" Command="{Binding OpenUriCommand}" CommandParameter="{x:Static app:Constants.ServiceSmileAccountReset}">パスワード再発行</Button>
              </StackPanel>
              <Grid Grid.Row="2" Grid.Column="2">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Command="{Binding LoginCommand}">
                  <StackPanel Orientation="Horizontal">
                    <TextBlock>ログインチェック:</TextBlock>
                    <TextBlock Text="{Binding Session.LoginState, Converter={StaticResource EnumDisplayConverter}}" />
                  </StackPanel>
                </Button>
                <TextBlock Grid.Column="1" VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Margin="{StaticResource LeftMargin}">
                  ログインチェックするまでアカウント情報は有効になりません。
                </TextBlock>
              </Grid>

              <Separator Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="{StaticResource AllMargin}" />

              <StackPanel Grid.Row="4" Grid.Column="1">

                <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding EnabledStartupAutoLogin}">起動時に自動ログインする</CheckBox>
              </StackPanel>
            </Grid>
          </StackPanel>
        </GroupBox>

        <GroupBox Header="共通設定">
          <StackPanel>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <Label Grid.Row="0" Grid.Column="0">カスタムコピー書式</Label>
              <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding CommonCustomCopyFormat, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource VerticalTextBox}" />

              <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding CommonCustomCopyList}" />

            </Grid>
          </StackPanel>
        </GroupBox>

        <GroupBox Header="ランキング">
          <StackPanel>
            <ItemsControl ItemsSource="{Binding RankingCategoryItems}">
              <ItemsControl.ItemTemplate>
                <!-- HierarchicalDataTemplate と迷ったけど2階層しかない仕様だからこれで落ち着いた -->
                <DataTemplate>
                  <StackPanel>
                    <CheckBox IsChecked="{Binding RootItem.IsChecked}" Content="{Binding RootItem.DisplayText}" Style="{StaticResource VerticalCheckBox}" />
                    <ItemsControl ItemsSource="{Binding Children}" IsEnabled="{Binding RootItem.IsChecked}">
                      <ItemsControl.Margin>
                        <Thickness Left="{StaticResource NormalIndentWidth}" Bottom="{StaticResource HalfMarginWidth}" />
                      </ItemsControl.Margin>
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <WrapPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding DisplayText}" Style="{StaticResource HorizontalCheckBox}" />
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </StackPanel>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </StackPanel>
        </GroupBox>

        <GroupBox Header="動画再生方法">
          <StackPanel>
            <RadioButton Content="プレイヤーで開く" IsChecked="{Binding OpenMode, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Application}, Converter={StaticResource EnumToBooleanConverter}}" Style="{StaticResource VerticalRadioButton}" />
            <RadioButton Content="ブラウザで開く" IsChecked="{Binding OpenMode, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Browser}, Converter={StaticResource EnumToBooleanConverter}}" Style="{StaticResource VerticalRadioButton}" />
            <RadioButton Content="外部プログラムで開く" IsChecked="{Binding OpenMode, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Launcher}, Converter={StaticResource EnumToBooleanConverter}}" Style="{StaticResource VerticalRadioButton}" />

            <GroupBox Header="外部プログラム設定">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Content="プログラム"/>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding LauncherPath, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource VerticalTextBox}" />
                <Button Grid.Row="0" Grid.Column="2" Command="{Binding OpenDialogLauncherPathCommand}" Style="{StaticResource VerticalButton}" Content="開く" />

                <Label Grid.Row="1" Grid.Column="0" Content="パラメータ"/>
                <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding LauncherParameter, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource VerticalTextBox}" />

                <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding LauncherParameterList}" />

                <TextBlock Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" TextWrapping="Wrap">
                  <Run>外部プログラムは理屈としてパラメタ―必須のため</Run>
                  <Run FontWeight="Bold">プログラム</Run>
                  <Run>と</Run>
                  <Run FontWeight="Bold">パラメータ</Run>
                  <Run>がそれぞれ設定されないと使用できません。</Run>
                </TextBlock>

              </Grid>
            </GroupBox>

          </StackPanel>
        </GroupBox>

        <GroupBox Header="ダウンロード">
          <StackPanel>
            <CheckBox Style="{StaticResource VerticalCheckBox}" IsChecked="{Binding UsingDmc}">DMC形式を使用</CheckBox>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <Label Grid.Row="0" Grid.Column="0">動画ソース</Label>
              <Grid Grid.Row="0" Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="7*" />
                  <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Slider
                  Grid.Column="0"
                  VerticalAlignment="Center"
                  Minimum="{Binding Source={x:Static app:Constants.ServiceSmileVideoDownloadDmcWeightRangeMinimum}}"
                  Maximum="{Binding Source={x:Static app:Constants.ServiceSmileVideoDownloadDmcWeightRangeMaximum}}"
                  Value="{Binding DmcVideoWeight}"
                />
                <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="{StaticResource LeftMargin}" Text="{Binding DmcVideoWeight}" />
              </Grid>

              <Label Grid.Row="1" Grid.Column="0">音声ソース</Label>
              <Grid Grid.Row="1" Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="7*" />
                  <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Slider
                  Grid.Column="0"
                  VerticalAlignment="Center"
                  Minimum="{Binding Source={x:Static app:Constants.ServiceSmileVideoDownloadDmcWeightRangeMinimum}}"
                  Maximum="{Binding Source={x:Static app:Constants.ServiceSmileVideoDownloadDmcWeightRangeMaximum}}"
                  Value="{Binding DmcAudioWeight}"
                />
                <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="{StaticResource LeftMargin}" Text="{Binding DmcAudioWeight}" />
              </Grid>
            </Grid>
          </StackPanel>
        </GroupBox>

        <GroupBox Header="プレイヤー">
          <StackPanel>
            <CheckBox IsChecked="{Binding OpenPlayerInNewWindow}" Style="{StaticResource VerticalCheckBox}">常に新規プレイヤーで動画再生を行う</CheckBox>
            <CheckBox IsChecked="{Binding IsAutoPlay}" Style="{StaticResource VerticalCheckBox}">動画を自動的に再生する</CheckBox>
            <CheckBox IsChecked="{Binding InactiveIsFullScreenRestore}" Style="{StaticResource VerticalCheckBox}">フルスクリーン時に非アクティブで通常ウィンドウに戻す</CheckBox>
            <StackPanel Orientation="Horizontal" IsEnabled="{Binding InactiveIsFullScreenRestore, Mode=OneWay}">
              <Separator Style="{StaticResource NormalIndent}" />
              <CheckBox IsChecked="{Binding InactiveIsFullScreenRestorePrimaryDisplayOnly}" Style="{StaticResource VerticalCheckBox}">メインディスプレイに限定する</CheckBox>
            </StackPanel>
            <CheckBox IsChecked="{Binding StopFullScreenRestore}" Style="{StaticResource VerticalCheckBox}">再生終了時にフルスクリーンを解除する</CheckBox>
            <StackPanel Orientation="Horizontal" IsEnabled="{Binding StopFullScreenRestore, Mode=OneWay}">
              <Separator Style="{StaticResource NormalIndent}" />
              <CheckBox IsChecked="{Binding StopFullScreenRestorePrimaryDisplayOnly}" Style="{StaticResource VerticalCheckBox}">メインディスプレイに限定する</CheckBox>
            </StackPanel>
            <CheckBox IsChecked="{Binding KeySpaceToPause}" Style="{StaticResource VerticalCheckBox}">スペースキーで一時停止</CheckBox>
            <CheckBox IsChecked="{Binding MoseClickToPause}" Style="{StaticResource VerticalCheckBox}">クリックで一時停止</CheckBox>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <Label Grid.Row="0" Grid.Column="0">自動再生判定</Label>
              <Grid Grid.Row="0" Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="7*" />
                  <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Slider
                  x:Name="sliderBuffer"
                  Grid.Column="0"
                  VerticalAlignment="Center"
                  Value="{Binding AutoPlayLowestSize}"
                  Minimum="{Binding Source={x:Static app:Constants.ServiceSmileVideoPlayerAutoPlayLowestSizeRangeMinimum}}"
                  Maximum="{Binding Source={x:Static app:Constants.ServiceSmileVideoPlayerAutoPlayLowestSizeRangeMaximum}}"
                />
                <TextBlock
                  Grid.Column="2"
                  Text="{Binding Value, ElementName=sliderBuffer, Converter={StaticResource HumanLikeByteConverter}}"
                  VerticalAlignment="Center"
                  Margin="{StaticResource LeftMargin}"
                />

              </Grid>

              <Label Grid.Row="1" Grid.Column="0">ホイール操作</Label>
              <WrapPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                <RadioButton Style="{StaticResource HorizontalRadioButton}" IsChecked="{Binding WheelOperation, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_ui_player:WheelOperation.None}}"  Content="{Binding Source={x:Static app_define_ui_player:WheelOperation.None}, Converter={StaticResource EnumDisplayConverter}}" />
                <RadioButton Style="{StaticResource HorizontalRadioButton}" IsChecked="{Binding WheelOperation, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_ui_player:WheelOperation.Volume}}" Content="{Binding Source={x:Static app_define_ui_player:WheelOperation.Volume}, Converter={StaticResource EnumDisplayConverter}}" />
                <RadioButton Style="{StaticResource HorizontalRadioButton}" IsChecked="{Binding WheelOperation, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_ui_player:WheelOperation.Seek}}"  Content="{Binding Source={x:Static app_define_ui_player:WheelOperation.Seek}, Converter={StaticResource EnumDisplayConverter}}"/>
              </WrapPanel>

              <Label Grid.Row="2" Grid.Column="0">音量増減値</Label>
              <Grid Grid.Row="2" Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="7*" />
                  <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Slider
                  x:Name="sliderVolume"
                  Grid.Column="0"
                  VerticalAlignment="Center"
                  LargeChange="2"
                  SmallChange="1"
                  Minimum="{Binding Source={x:Static app:Constants.ServiceSmileVideoPlayerStepVolumeRangeMinimum}}"
                  Maximum="{Binding Source={x:Static app:Constants.ServiceSmileVideoPlayerStepVolumeRangeMaximum}}"
                  Value="{Binding VolumeOperationStep}"
                />
                <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="{StaticResource LeftMargin}" Text="{Binding Value, ElementName=sliderVolume}" />
              </Grid>

              <Label Grid.Row="3" Grid.Column="0">シーク増減値</Label>
              <Grid Grid.Row="3" Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="8*" />
                  <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" IsChecked="{Binding SeekOperationIsPercent}" Style="{StaticResource HorizontalCheckBox}">比率</CheckBox>
                <Slider x:Name="sliderSeek" Grid.Column="1" LargeChange="2" VerticalAlignment="Center" SmallChange="1">
                  <Slider.Style>
                    <Style TargetType="Slider" BasedOn="{StaticResource {x:Type Slider}}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding SeekOperationIsPercent}" Value="True">
                          <Setter Property="Value" Value="{Binding SeekOperationPercentStep}" />
                          <Setter Property="Minimum" Value="{Binding Source={x:Static app:Constants.ServiceSmileVideoPlayerStepSeekRangePercentMinimum}}" />
                          <Setter Property="Maximum" Value="{Binding Source={x:Static app:Constants.ServiceSmileVideoPlayerStepSeekRangePercentMaximum}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SeekOperationIsPercent}" Value="False">
                          <Setter Property="Value" Value="{Binding SeekOperationAbsoluteStep}" />
                          <Setter Property="Minimum" Value="{Binding Source={x:Static app:Constants.ServiceSmileVideoPlayerStepSeekRangeAbsoluteMinimum}}" />
                          <Setter Property="Maximum" Value="{Binding Source={x:Static app:Constants.ServiceSmileVideoPlayerStepSeekRangeAbsoluteMaximum}}" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Slider.Style>
                </Slider>
                <TextBlock Grid.Column="4" VerticalAlignment="Center" Margin="{StaticResource LeftMargin}">
                  <Run Text="{Binding Value, ElementName=sliderSeek, Mode=OneWay}" />
                  <Run>
                    <Run.Style>
                      <Style TargetType="Run">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding SeekOperationIsPercent}" Value="True">
                            <Setter Property="Text" Value="%" />
                          </DataTrigger>
                          <DataTrigger Binding="{Binding SeekOperationIsPercent}" Value="False">
                            <Setter Property="Text" Value="秒" />
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Run.Style>
                  </Run>
                </TextBlock>
              </Grid>

              <Label Grid.Row="4" Grid.Column="0">動画背景</Label>
              <WrapPanel Grid.Row="4" Grid.Column="1">
                <RadioButton Style="{StaticResource HorizontalRadioButton}" IsChecked="{Binding BackgroundKind, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_ui_player:BackgroundKind.AutoColor}}"   Content="{Binding Source={x:Static app_define_ui_player:BackgroundKind.AutoColor}, Converter={StaticResource EnumDisplayConverter}}" />
                <RadioButton Style="{StaticResource HorizontalRadioButton}" IsChecked="{Binding BackgroundKind, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define_ui_player:BackgroundKind.SimpleColor}}" Content="{Binding Source={x:Static app_define_ui_player:BackgroundKind.SimpleColor}, Converter={StaticResource EnumDisplayConverter}}" />
                <ComboBox ItemsSource="{Binding BackgroundColors}" SelectedItem="{Binding BackgroundColor}" />
              </WrapPanel>
            </Grid>
          </StackPanel>
        </GroupBox>

      </StackPanel>
    </ScrollViewer>
  </Grid>
</UserControl>
