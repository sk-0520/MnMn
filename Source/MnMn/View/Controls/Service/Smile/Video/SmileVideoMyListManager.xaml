<!--
  呼び出し元から DataContext を設定して使用。
-->
<UserControl
  x:Name="root"
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video.SmileVideoMyListManager"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  
  xmlns:mamc="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"
  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"
  xmlns:app_view_converter_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter.Service.Smile.Video"
  xmlns:app_view_controls_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video"
  xmlns:app_view_attachment="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Attachment"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="600"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

      <cttn_sl_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />
      <cttn_sl_view_converter:ComplementaryColorConverter x:Key="ComplementaryColorConverter" />
      <cttn_sl_view_converter:AutoColorConverter x:Key="AutoColorConverter" />
      <cttn_sl_view_converter:RatioConverter x:Key="RatioConverter" />

      <app_view_converter:ColoringConverter x:Key="ColoringConverter" />
      <app_view_converter:SourceLoadStateIsNotCompletedConverter x:Key="SourceLoadStateIsNotCompletedConverter" />
      <app_view_converter_service_smile_video:MyListFolderIdToColorConverter x:Key="MyLIstFolderIdToColorConverter" />
      <app_view_converter_service_smile_video:MyListCanRemoveToVisibilityConverter x:Key="MyListCanRemoveToVisibilityConverter" />

      <Style x:Key="FolderImage" TargetType="Image" BasedOn="{StaticResource SmallItemImage}">
        <Setter Property="Stretch" Value="Fill" />
      </Style>

      <Style x:Key="MyListBox" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="SelectedItem" Value="{Binding DataContext.SelectedFinder, RelativeSource={RelativeSource AncestorType=UserControl}}" />
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <StackPanel>
                <StackPanel Orientation="Horizontal">
                  <app_view_controls:SourceLoadStateNavigator Width="8" Height="8" SourceLoadState="{Binding FinderLoadState}" />
                  <Viewbox Style="{StaticResource SmallIconBox}" Visibility="{Binding HasMyListFolder, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Canvas Style="{StaticResource IconCanvas-24x24}">
                      <Path Data="{StaticResource Image_Folder}" Style="{StaticResource IconPath}">
                        <Path.Fill>
                          <SolidColorBrush Color="{Binding MyListFolderColor}" />
                        </Path.Fill>
                        <Path.Stroke>
                          <SolidColorBrush Color="{Binding Fill.Color, Converter={StaticResource AutoColorConverter}, RelativeSource={RelativeSource AncestorType=Path}}"></SolidColorBrush>
                        </Path.Stroke>
                      </Path>
                    </Canvas>
                  </Viewbox>
                  <TextBlock Text="{Binding MyListName}" />
                </StackPanel>
                <TextBlock>
                  <TextBlock.Style>
                    <Style TargetType="TextBlock">
                      <Style.Triggers>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding FinderLoadState, Converter={StaticResource SourceLoadStateIsNotCompletedConverter}}" Value="True"  />
                            <Condition Binding="{Binding MyListItemCount}" Value="0" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="Text" Value="未読込" />
                        </MultiDataTrigger>
                      </Style.Triggers>
                      <Setter Property="Text" Value="{Binding MyListItemCount, StringFormat=アイテム数: {0}}" />
                    </Style>
                  </TextBlock.Style>
                </TextBlock>
                <TextBlock Visibility="{Binding IsAccountMyList, Converter={StaticResource BooleanToVisibilityConverter}}">
                  <TextBlock.Style>
                    <Style TargetType="TextBlock">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPublic}" Value="True">
                          <Setter Property="Text" Value="公開マイリスト" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPublic}" Value="False">
                          <Setter Property="Text" Value="非公開マイリスト" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                </TextBlock>
              </StackPanel>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="{Binding GroupWidth, Mode=TwoWay}" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="{Binding ItemsWidth, Mode=TwoWay}" />
    </Grid.ColumnDefinitions>

    <Grid Grid.Column="0">
      <!-- 各データコンテキストは選択用で下位はUserControlのデータコンテキストを参照する -->
      <TabControl Style="{StaticResource FinderTab}">
        <TabItem x:Name="viewAccount" Header="アカウント" IsSelected="{Binding IsSelectedAccount}" IsEnabled="{Binding Session.IsLoggedIn}" app_view_attachment:MenuTabItem.Header="{Binding Header, RelativeSource={RelativeSource Self}}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ToolBar Grid.Row="0">
              <Button Command="{Binding LoadAccountMyListCommand}">読込</Button>
              <Button Command="{Binding CreateAccountMyListCommand}">作成</Button>
              <Button Command="{Binding RemoveSelectedAccountMyListCommand}">削除</Button>
              <Separator />
              <ToggleButton IsChecked="{Binding ShowAccountSortMyList}">並び替え</ToggleButton>
            </ToolBar>

            <ListBox Grid.Row="1" Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedAccountFinder}" ItemsSource="{Binding AccountMyListItems}" />

            <Expander Grid.Row="2" Header="編集" Visibility="{Binding SelectedAccountFinder.CanEdit, Converter={StaticResource BooleanToVisibilityConverter}}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Content="名前" />
                <Grid Grid.Row="0" Grid.Column="1" >
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TextBox Grid.Column="0" Text="{Binding SelectedAccountFinder.EditingMyListName, UpdateSourceTrigger=PropertyChanged}" />
                  <ComboBox Grid.Column="1" ItemsSource="{Binding FolderIdColors}" SelectedValue="{Binding SelectedAccountFinder.EditingMyListFolderIdElement}" >
                    <ComboBox.ItemTemplate>
                      <DataTemplate>
                        <Viewbox Style="{StaticResource SmallIconBox}">
                          <Canvas Style="{StaticResource IconCanvas-24x24}">
                            <Path Data="{StaticResource Image_Folder}" Style="{StaticResource IconPath}">
                              <Path.Fill>
                                <SolidColorBrush Color="{Binding Converter={StaticResource MyLIstFolderIdToColorConverter}}" />
                              </Path.Fill>
                              <Path.Stroke>
                                <SolidColorBrush Color="{Binding Fill.Color, Converter={StaticResource AutoColorConverter}, RelativeSource={RelativeSource AncestorType=Path}}"></SolidColorBrush>
                              </Path.Stroke>
                            </Path>
                          </Canvas>
                        </Viewbox>
                      </DataTemplate>
                    </ComboBox.ItemTemplate>
                  </ComboBox>
                  <CheckBox Grid.Column="2" Content="公開" IsChecked="{Binding SelectedAccountFinder.EditingMyListIsPublic}"/>
                </Grid>

                <Label Grid.Row="1" Grid.Column="0" Content="ソート" />
                <ComboBox Grid.Row="1" Grid.Column="1" DisplayMemberPath="DisplayText" ItemsSource="{Binding Sorts}" SelectedValue="{Binding SelectedAccountFinder.EditingMyListSortElement}" />

                <GroupBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Header="メモ" >
                  <TextBox
                    AcceptsReturn="True"
                    Text="{Binding SelectedAccountFinder.EditingMyListDescription, UpdateSourceTrigger=PropertyChanged}"
                  />
                </GroupBox>

                <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Button Grid.Column="0" Content="保存" Command="{Binding SaveEditCommand}" CommandParameter="{Binding SelectedAccountFinder}" IsEnabled="{Binding SelectedAccountFinder.IsEditing}" />
                  <Button Grid.Column="1" Content="キャンセル" Command="{Binding SelectedAccountFinder.CancelEditCommand}" IsEnabled="{Binding SelectedAccountFinder.IsEditing}"/>
                </Grid>

              </Grid>
            </Expander>

            <Border Grid.Row="1" Grid.RowSpan="2" Padding="8" Background="#88888888" Visibility="{Binding ShowAccountSortMyList, Converter={StaticResource BooleanToVisibilityConverter}}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <ListBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource MyListBox}" ItemsSource="{Binding AccountSortMyListItems}" SelectedItem="{Binding SelectedAccountSortFinder}" />
                <RepeatButton Grid.Row="1" Grid.Column="0" Command="{Binding UpAccountSortMyListCommand}">
                  <Viewbox Style="{StaticResource SmallIconBox}">
                    <Canvas Style="{StaticResource IconCanvas-24x24}">
                      <Path Data="{StaticResource Image_Item-Up}" Style="{StaticResource SmallDefaultIconPath}" />
                    </Canvas>
                  </Viewbox>
                </RepeatButton>
                <RepeatButton Grid.Row="1" Grid.Column="1" Command="{Binding DownAccountSortMyListCommand}">
                  <Viewbox Style="{StaticResource SmallIconBox}">
                    <Canvas Style="{StaticResource IconCanvas-24x24}">
                      <Path Data="{StaticResource Image_Item-Down}" Style="{StaticResource SmallDefaultIconPath}" />
                    </Canvas>
                  </Viewbox>
                </RepeatButton>
                <Button Grid.Row="1" Grid.Column="2" Command="{Binding SaveAccountSortMyListCommand}">保存</Button>
              </Grid>
            </Border>
          </Grid>
        </TabItem>

        <TabItem x:Name="viewSearch" Header="検索" IsSelected="{Binding IsSelectedSearch}"  app_view_attachment:MenuTabItem.Header="{Binding Header, RelativeSource={RelativeSource Self}}">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <TextBox 
                mamc:TextBoxHelper.Watermark="検索 or mylist/xx" 
                mamc:TextBoxHelper.ButtonCommand="{Binding SearchUserMyListCommand}"
                Text="{Binding InputSearchMyList, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource SearchTextBox}"
              >
                <TextBox.InputBindings>
                  <KeyBinding Key="Enter" Command="{Binding SearchUserMyListCommand}" />
                </TextBox.InputBindings>
              </TextBox>
              <Button Command="{Binding AddBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedSearchFinder}" ToolTip="ブックマーク追加">
                <Viewbox Style="{StaticResource SmallIconBox}">
                  <Canvas Style="{StaticResource IconCanvas-24x24}">
                    <Path Data="{StaticResource Image_Bookmark-Add}" Style="{StaticResource SmallDefaultIconPath}" />
                  </Canvas>
                </Viewbox>
              </Button>
            </ToolBar>

            <app_view_controls:Pager
              DockPanel.Dock="Bottom"
              PageItems="{Binding PageItems}"
              Command="{Binding DataContext.SearchUserMyListPageChangeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
            />
            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedSearchFinder}" ItemsSource="{Binding SearchUserMyListItems}" />

          </DockPanel>
        </TabItem>

        <TabItem x:Name="viewBookmark" Header="ブックマーク" IsSelected="{Binding IsSelectedBookmark}"  app_view_attachment:MenuTabItem.Header="{Binding Header, RelativeSource={RelativeSource Self}}">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <Button Command="{Binding RemoveSelectedBookmarkUserMyListCommand}">削除</Button>
              <Separator />
              <Button Grid.Column="0" Command="{Binding PositionUpBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedBookmarkFinder}">
                <Viewbox Style="{StaticResource SmallIconBox}">
                  <Canvas Style="{StaticResource IconCanvas-24x24}">
                    <Path Data="{StaticResource Image_Item-Up}" Style="{StaticResource SmallDefaultIconPath}" />
                  </Canvas>
                </Viewbox>
              </Button>
              <Button Grid.Column="1" Command="{Binding PositionDownBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedBookmarkFinder}">
                <Viewbox Style="{StaticResource SmallIconBox}">
                  <Canvas Style="{StaticResource IconCanvas-24x24}">
                    <Path Data="{StaticResource Image_Item-Down}" Style="{StaticResource SmallDefaultIconPath}" />
                  </Canvas>
                </Viewbox>
              </Button>

              <Separator />
              <CheckBox IsChecked="{Binding UsingBookmarkTagFilter}">タグフィルタ</CheckBox>
            </ToolBar>

            <StackPanel DockPanel.Dock="Top" MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=DockPanel}, Converter={StaticResource RatioConverter}, ConverterParameter=0.3}" Visibility="{Binding UsingBookmarkTagFilter, Converter={StaticResource BooleanToVisibilityConverter}}">
              <ScrollViewer >
                <ItemsControl ItemsSource="{Binding BookmarkTagItems}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding TagName}" Margin="{StaticResource IndependentMargin}" />
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </ScrollViewer>

              <Separator/>
            </StackPanel>

            <Expander DockPanel.Dock="Bottom" Header="編集">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0">名前</Label>
                <Grid Grid.Row="0" Grid.Column="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <TextBox Grid.Column="0" Text="{Binding SelectedBookmarkFinder.MyListCustomName, UpdateSourceTrigger=PropertyChanged}" />
                  <Button Grid.Column="1" Command="{Binding SelectedBookmarkFinder.RefreshBookmarkItemCommand}">戻す</Button>
                </Grid>

                <Label Grid.Row="1" Grid.Column="0">
                  <TextBlock>
                    <Run>タグ</Run>
                    <Run FontSize="9" Text="{Binding BookmarkTagTokenSplitter, StringFormat=( {0} 区切り), Mode=OneTime}" />
                  </TextBlock>
                </Label>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding SelectedBookmarkFinder.TagNames, UpdateSourceTrigger=LostFocus}" />

              </Grid>
            </Expander>


            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedBookmarkFinder}" ItemsSource="{Binding BookmarkUserMyListItems}" />
          </DockPanel>
        </TabItem>

        <TabItem x:Name="viewHistory" Header="履歴" IsSelected="{Binding IsSelectedHistory}"  app_view_attachment:MenuTabItem.Header="{Binding Header, RelativeSource={RelativeSource Self}}">
          <DockPanel>
            <ToolBar DockPanel.Dock="Top">
              <Button Command="{Binding AddBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedHistoryFinder}" ToolTip="ブックマーク追加">
                <Viewbox Style="{StaticResource SmallIconBox}">
                  <Canvas Style="{StaticResource IconCanvas-24x24}">
                    <Path Data="{StaticResource Image_Bookmark-Add}" Style="{StaticResource SmallDefaultIconPath}" />
                  </Canvas>
                </Viewbox>
              </Button>
            </ToolBar>
            <ListBox Style="{StaticResource MyListBox}" SelectedItem="{Binding SelectedHistoryFinder}" ItemsSource="{Binding HistoryUserMyListItems}" />
          </DockPanel>
        </TabItem>

      </TabControl>
    </Grid>


    <GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />

    <Grid Grid.Column="2">

      <app_view_controls_service_smile_video:SmileVideoFinderControl DataContext="{Binding SelectedCurrentFinder}">
        <app_view_controls_service_smile_video:SmileVideoFinderControl.FooterContent>
          <ContentControl Visibility="{Binding Converter={StaticResource MyListCanRemoveToVisibilityConverter}}">
            <Button Command="{Binding DataContext.RemoveCheckedAccountMyListVideoCommand, RelativeSource={RelativeSource AncestorType=app_view_controls_service_smile_video:SmileVideoMyListManager}}">チェック項目を削除</Button>
          </ContentControl>
        </app_view_controls_service_smile_video:SmileVideoFinderControl.FooterContent>
      </app_view_controls_service_smile_video:SmileVideoFinderControl>

    </Grid>
  </Grid>
</UserControl>
