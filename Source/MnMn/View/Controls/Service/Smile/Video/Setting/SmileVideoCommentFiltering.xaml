<UserControl
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video.Setting.SmileVideoCommentFiltering"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
  xmlns:mamc="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"

  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"
  xmlns:app_define="crl-namespace:ContentTypeTextNet.MnMn.MnMn.Define"
  xmlns:app_define_service_smile_video="crl-namespace:ContentTypeTextNet.MnMn.MnMn.Define.Service.Smile.Video"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="300"
>
  <UserControl.Resources>
    <cttn_sl_view_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    <cttn_sl_view_converter:HasTextLengthConverter x:Key="HasTextLengthConverter" />
    <cttn_sl_view_converter:LogicalIsNotNullConverter x:Key="LogicalIsNotNullConverter" />
    <cttn_sl_view_converter:LogicalMultiAndConverter x:Key="LogicalMultiAndConverter" />
    <app_view_converter:EnumDisplayConverter x:Key="EnumDisplayConverter" />
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Expander Grid.Row="0" Header="特別設定">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <CheckBox x:Name="selectIgnoreOverlapWord" Grid.Row="0" Grid.Column="0" Checked="selectIgnoreOverlapWord_Checked_Unchecked" Unchecked="selectIgnoreOverlapWord_Checked_Unchecked">重複コメントを破棄</CheckBox>
        <Grid Grid.Row="0" Grid.Column="1">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>

          <mamc:NumericUpDown x:Name="inputIgnoreOverlapTime" Grid.Column="0" ValueChanged="inputIgnoreOverlapTime_ValueChanged" Minimum="1" Maximum="30"  />
          <TextBlock Grid.Column="1" VerticalAlignment="Center">秒以内</TextBlock>
        </Grid>

        <ItemsControl x:Name="filteringList" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"  >
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <CheckBox Checked="DefinedItemCheckBox_Checked_Unchecked" Unchecked="DefinedItemCheckBox_Checked_Unchecked" IsChecked="{Binding IsChecked}" Content="{Binding DisplayText}" ToolTip="{Binding Source}" />
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </Grid>
    </Expander>

    <Separator Grid.Row="1" />

    <ListBox
      x:Name="filterItems"
      Grid.Row="2"
      ItemsSource="{Binding FilteringViewModelItemsSource, RelativeSource={RelativeSource AncestorType=UserControl}}"
      SelectionChanged="filterItems_SelectionChanged"
    >
      <ListBox.ItemTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <TextBlock Width="60" Text="{Binding Type, Converter={StaticResource EnumDisplayConverter}}" />
            <TextBlock Width="80" Text="{Binding Target, Converter={StaticResource EnumDisplayConverter}}" />
            <TextBlock Text="{Binding Source}" />
          </StackPanel>
        </DataTemplate>
      </ListBox.ItemTemplate>
    </ListBox>

    <StackPanel Grid.Row="3">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ComboBox x:Name="selectType" Grid.Column="0" SelectedIndex="0" SelectedItem="{Binding SelectedFilteringEditItem.EditingType, RelativeSource={RelativeSource AncestorType=UserControl}}" ItemsSource="{Binding FilteringTypeItems, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <ComboBox.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConverter}}" />
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>
        <ComboBox x:Name="selectTarget" Grid.Column="1" SelectedIndex="0" SelectedItem="{Binding SelectedFilteringEditItem.EditingTarget, RelativeSource={RelativeSource AncestorType=UserControl}}" ItemsSource="{Binding FilteringTargetItems, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <ComboBox.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConverter}}" />
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>
        <CheckBox x:Name="selectIgnoreCase" Grid.Column="2" IsChecked="{Binding SelectedFilteringEditItem.EditingIgnoreCase, RelativeSource={RelativeSource AncestorType=UserControl}}">大文字小文字を無視</CheckBox>
      </Grid>
      <TextBox x:Name="inputSource" Text="{Binding SelectedFilteringEditItem.EditingSource, RelativeSource={RelativeSource AncestorType=UserControl}}" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0" Click="UpdateButton_Click">
          <Button.IsEnabled>
            <MultiBinding Converter="{StaticResource LogicalMultiAndConverter}">
              <Binding Path="SelectedFilteringEditItem" Converter="{StaticResource LogicalIsNotNullConverter}" RelativeSource="{RelativeSource AncestorType=UserControl}" />
              <Binding Path="SelectedFilteringEditItem.EditingSource" Converter="{StaticResource HasTextLengthConverter}" RelativeSource="{RelativeSource AncestorType=UserControl}" />
            </MultiBinding>
          </Button.IsEnabled>
          更新
        </Button>
        <Button Grid.Column="1" Click="CreateButton_Click" IsEnabled="{Binding Text, Converter={StaticResource HasTextLengthConverter}, ElementName=inputSource}" >挿入</Button>
        <Button Grid.Column="2" Click="RemoveButton_Click" IsEnabled="{Binding SelectedFilteringEditItem, Converter={StaticResource LogicalIsNotNullConverter}, RelativeSource={RelativeSource AncestorType=UserControl}}">削除</Button>
        <!--<Button Grid.Column="2" Command="{Binding RemoveCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">remove</Button>-->
      </Grid>
    </StackPanel>


  </Grid>
</UserControl>
