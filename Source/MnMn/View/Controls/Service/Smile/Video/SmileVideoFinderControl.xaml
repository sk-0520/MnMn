<!--
  呼び出し元から DataContext を設定して使用。
-->
<UserControl
  x:Name="root"
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video.SmileVideoFinderControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"

  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"

  xmlns:mamc="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"

  xmlns:app_define="clr-namespace:ContentTypeTextNet.MnMn.MnMn.Define"
  xmlns:app_define_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.Define.Service.Smile.Video"
  xmlns:app_view_attachment="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Attachment"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"
  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"
  xmlns:app_view_controls_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video"
  xmlns:app_view_controls_service_smile_video_setting="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video.Setting"
  xmlns:app_view_converter_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter.Service.Smile.Video"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="400"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/Resources/ListBoxDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/ImageDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/TextBoxDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/MenuDictionary.xaml" />
      </ResourceDictionary.MergedDictionaries>-->

      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

      <cttn_sl_view_converter:LogicalMultiOrConverter x:Key="LogicalMultiOrConverter" />
      <cttn_sl_view_converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
      <cttn_sl_view_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
      <cttn_sl_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />

      <app_view_converter:EnumDisplayConverter x:Key="EnumDisplayConverter" />
      <app_view_converter:MultiCommandParameterConverter x:Key="MultiCommandParameterConverter" />
      <app_view_converter_service_smile_video:TimespanToHMFormatConverter x:Key="TimespanToHMFormatConverter" />

      <Thickness x:Key="ValueCell">8,2</Thickness>

      <Style x:Key="HeaderColumn" TargetType="TextBlock">
        <Setter Property="Padding" Value="2" />
      </Style>

      <Style x:Key="NumberColumn" TargetType="TextBlock">
        <Setter Property="Padding" Value="{StaticResource ValueCell}" />
        <Setter Property="TextAlignment" Value="Right" />
      </Style>

      <Style x:Key="HeadFootContent" TargetType="ContentControl">
        <Setter Property="Visibility" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource NullToVisibilityConverter}}" />
      </Style>

      <Style x:Key="BodyContentVisibility" TargetType="Grid">
        <Setter Property="Visibility" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource NullToVisibilityConverter}}" />
      </Style>

    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <!--<Grid.ColumnDefinitions>
      <ColumnDefinition Width="17*"/>
      <ColumnDefinition Width="33*"/>
    </Grid.ColumnDefinitions>-->
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <ContentControl x:Name="PART_Header" Grid.Row="0" Content="{Binding HeaderContent, RelativeSource={RelativeSource AncestorType=UserControl}}" Style="{StaticResource HeadFootContent}" Grid.ColumnSpan="2" Margin="0,0,0,28" Grid.RowSpan="2" />

    <Grid Grid.Row="1" Style="{StaticResource BodyContentVisibility}" Grid.ColumnSpan="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="100" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <Button Grid.Column="0" Command="{Binding AllCheckCommand}">
        <Viewbox Style="{StaticResource SmallIconBox}">
          <Canvas Style="{StaticResource IconCanvas-24x24}">
            <!-- https://materialdesignicons.com/icon/checkbox-marked-outline -->
            <Path Data="M19,19H5V5H15V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V11H19M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z" Style="{StaticResource SmallDefaultIconPath}" />
          </Canvas>
        </Viewbox>
      </Button>
      <!--<xctk:SplitButton Grid.Column="1" Margin="0,0,10,0" ToolTip="チェックされた項目を連続再生します" Command="{Binding ContinuousPlaybackCommand}" IsOpen="{Binding ShowContinuousPlaybackMenu}">
        <xctk:SplitButton.Content>連続再生(_P)</xctk:SplitButton.Content>
        <xctk:SplitButton.DropDownContent>
          <MenuItem Header="ランダム連続再生(_R)" Command="{Binding RandomContinuousPlaybackCommand}" />
        </xctk:SplitButton.DropDownContent>
      </xctk:SplitButton>-->
      <mamc:SplitButton Grid.Column="1" SelectedItem="{Binding SelectedCheckedProcess}" ItemsSource="{Binding CheckedProcessItems}" Command="{Binding CheckedProcessCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Self}}">
        <mamc:SplitButton.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConverter}}" />
          </DataTemplate>
        </mamc:SplitButton.ItemTemplate>
      </mamc:SplitButton>

      <!--<xctk:WatermarkTextBox Grid.Column="2" VerticalAlignment="Center" Watermark="タイトルフィルタ" Text="{Binding InputTitleFilter, UpdateSourceTrigger=PropertyChanged}" />-->
      <TextBox Grid.Column="2" mamc:TextBoxHelper.ClearTextButton="True" mamc:TextBoxHelper.Watermark="タイトルフィルタ" Text="{Binding InputTitleFilter, UpdateSourceTrigger=PropertyChanged}" Margin="{StaticResource LeftMargin}" />

      <ToggleButton Grid.Column="3" IsChecked="{Binding IsBlacklist}" Margin="{StaticResource RightMargin}">除外</ToggleButton>

      <Label Grid.Column="4" >並べ替え</Label>
      <ToggleButton Grid.Column="5" IsChecked="{Binding IsAscending}" Style="{StaticResource OrderAscendingButton}" />
      <!--<ToggleButton Grid.Column="5" IsChecked="{Binding IsAscending}">
        <Viewbox Style="{StaticResource SmallIconBox}">
          <Canvas Style="{StaticResource IconCanvas-24x24}">
            <Path>
              <Path.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource SmallDefaultIconPath}">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsAscending}" Value="True">
                      <Setter Property="Data" Value="{StaticResource Image_OrderAscending}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsAscending}" Value="False">
                      <Setter Property="Data" Value="{StaticResource Image_OrderDescending}" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Path.Resources>
            </Path>
          </Canvas>
        </Viewbox>
      </ToggleButton>-->
      <ComboBox Grid.Column="6" MinWidth="100" VerticalContentAlignment="Center" ItemsSource="{Binding SortTypeItems}" SelectedItem="{Binding SelectedSortType}">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConverter}}" />
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>
      <!--<ToggleButton Grid.Column="7" IsChecked="{Binding ShowFilterSetting}" Visibility="{Binding IsUsingFinderFilter, Converter={StaticResource BooleanToVisibilityConverter}}">
        <StackPanel Orientation="Horizontal">
          <TextBlock>フィルタ</TextBlock>
          <ContentControl VerticalContentAlignment="Stretch">
            <ContentControl.Style>
              <Style TargetType="ContentControl">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsEnabledFinderFiltering}" Value="True">
                    <Setter Property="Content">
                      <Setter.Value>
                        <StackPanel Orientation="Horizontal">
                          <TextBlock>(</TextBlock>
                          <TextBlock Text="{Binding FinderItems.Count}" />
                          <TextBlock>/</TextBlock>
                          <TextBlock Text="{Binding FinderItemsViewer.Count}" />
                          <TextBlock>)</TextBlock>
                        </StackPanel>
                      </Setter.Value>
                    </Setter>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsEnabledFinderFiltering}" Value="False">
                    <Setter Property="Content">
                      <Setter.Value>
                        <TextBlock>(無効)</TextBlock>
                      </Setter.Value>
                    </Setter>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </ContentControl.Style>
          </ContentControl>
        </StackPanel>
      </ToggleButton>-->
      <Button Grid.Column="7" Command="{Binding SwitchShowFilterCommand}" Visibility="{Binding IsUsingFinderFilter, Converter={StaticResource BooleanToVisibilityConverter}}">
        <StackPanel Orientation="Horizontal">
          <TextBlock Style="{StaticResource ParentItemLikeText}">フィルタ</TextBlock>
          <ContentControl VerticalContentAlignment="Stretch">
            <ContentControl.Style>
              <Style TargetType="ContentControl">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsEnabledFinderFiltering}" Value="True">
                    <Setter Property="Content">
                      <Setter.Value>
                        <StackPanel Orientation="Horizontal">
                          <TextBlock>(</TextBlock>
                          <TextBlock Text="{Binding FinderItems.Count}" />
                          <TextBlock>/</TextBlock>
                          <TextBlock Text="{Binding FinderItemsViewer.Count}" />
                          <TextBlock>)</TextBlock>
                        </StackPanel>
                      </Setter.Value>
                    </Setter>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsEnabledFinderFiltering}" Value="False">
                    <Setter Property="Content">
                      <Setter.Value>
                        <TextBlock>(無効)</TextBlock>
                      </Setter.Value>
                    </Setter>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </ContentControl.Style>
          </ContentControl>
        </StackPanel>
      </Button>
    </Grid>

    <Grid Grid.Row="2" Style="{StaticResource BodyContentVisibility}" Grid.ColumnSpan="2">
      <!--<Grid.RowDefinitions>
        <RowDefinition Height="6*" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>-->

      <ListBox
        x:Name="PART_List"
        ItemsSource="{Binding FinderItems}"
        SelectedItem="{Binding SelectedFinderItem}"
      >
        <i:Interaction.Behaviors>
          <app_view_attachment:DragAndDropBehavior DragAndDrop="{Binding DragAndDrop}" />
        </i:Interaction.Behaviors>
        <ListBox.InputBindings>
          <KeyBinding Key="Return" Command="{Binding SelectedFinderItem.Information.OpenVideoDefaultCommand}" />
          <KeyBinding Key="Space" Command="{Binding SelectedFinderItem.ToggleCheckCommand}" />
          <KeyBinding Modifiers="Ctrl" Key="A" Command="{Binding AllCheckCommand}" />
        </ListBox.InputBindings>
        <ListBox.ItemContainerStyle>
          <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
          </Style>
        </ListBox.ItemContainerStyle>
        <ListBox.ContextMenu>
          <ContextMenu>
            <!--EnumToBooleanConverter-->
            <MenuItem Header="プレイヤーで開く" IsChecked="{Binding OpenMode, Mode=OneWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Application}}" >
              <MenuItem Header="再生中プレイヤー" IsChecked="{Binding OpenPlayerInNewWindow, Mode=OneWay, Converter={StaticResource LogicalNotConverter}}" Command="{Binding SelectedFinderItem.Information.OpenVideoFrommParameterCommnad}" >
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoOpenVideoCommandParameterModel">
                    <Binding Source="{x:Static app_define:ExecuteOrOpenMode.Application}" />
                    <Binding>
                      <Binding.Source>
                        <sys:Boolean>False</sys:Boolean>
                      </Binding.Source>
                    </Binding>
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              <MenuItem Header="新規プレイヤー" IsChecked="{Binding OpenPlayerInNewWindow, Mode=OneWay}" Command="{Binding SelectedFinderItem.Information.OpenVideoFrommParameterCommnad}" >
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoOpenVideoCommandParameterModel">
                    <Binding Source="{x:Static app_define:ExecuteOrOpenMode.Application}" />
                    <Binding>
                      <Binding.Source>
                        <sys:Boolean>True</sys:Boolean>
                      </Binding.Source>
                    </Binding>
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
            </MenuItem>
            <MenuItem Header="ブラウザで開く" IsChecked="{Binding OpenMode, Mode=OneWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Browser}}" Command="{Binding SelectedFinderItem.Information.OpenVideoFrommParameterCommnad}">
              <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoOpenVideoCommandParameterModel">
                  <Binding Source="{x:Static app_define:ExecuteOrOpenMode.Browser}" />
                  <Binding>
                    <Binding.Source>
                      <sys:Boolean>False</sys:Boolean>
                    </Binding.Source>
                  </Binding>
                </MultiBinding>
              </MenuItem.CommandParameter>
            </MenuItem>
            <MenuItem Header="外部プログラムで開く" IsChecked="{Binding OpenMode, Mode=OneWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Launcher}}" Command="{Binding SelectedFinderItem.Information.OpenVideoFrommParameterCommnad}">
              <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoOpenVideoCommandParameterModel">
                  <Binding Source="{x:Static app_define:ExecuteOrOpenMode.Launcher}" />
                  <Binding>
                    <Binding.Source>
                      <sys:Boolean>False</sys:Boolean>
                    </Binding.Source>
                  </Binding>
                </MultiBinding>
              </MenuItem.CommandParameter>
            </MenuItem>
            <Separator />
            <MenuItem Header="あとで見る" Command="{Binding AddCheckItLaterCommand}" />
            <MenuItem Header="未整理のブックマークに入れておく" Command="{Binding AddUnorganizedBookmarkCommand}" />
            <Separator />
            <MenuItem Header="クリップボードにコピー">
              <MenuItem.Icon>
                <Viewbox Style="{StaticResource SmallIconBox}">
                  <Canvas Style="{StaticResource IconCanvas-24x24}">
                    <Path Data="{StaticResource Image_Copy}" Style="{StaticResource SmallDefaultIconPath}" />
                  </Canvas>
                </Viewbox>
              </MenuItem.Icon>
              <MenuItem Header="カスタム" Command="{Binding CopyCustomInformationCommand}" />
              <MenuItem Header="動画ID" Command="{Binding CopyInformationTextCommand}" CommandParameter="{Binding SelectedFinderItem.Information.VideoId}" />
              <MenuItem Header="タイトル" Command="{Binding CopyInformationTextCommand}" CommandParameter="{Binding SelectedFinderItem.Information.Title}" />
              <MenuItem Header="ユーザーID" IsEnabled="{Binding SelectedFinderItem.Information.IsChannelVideo, Converter={StaticResource LogicalNotConverter}}" Command="{Binding CopyInformationTextCommand}" CommandParameter="{Binding SelectedFinderItem.Information.UserId}" />
              <MenuItem Header="ユーザー名" IsEnabled="{Binding SelectedFinderItem.Information.IsChannelVideo, Converter={StaticResource LogicalNotConverter}}" Command="{Binding CopyInformationTextCommand}" CommandParameter="{Binding SelectedFinderItem.Information.UserName}" />
              <MenuItem Header="チャンネルID" IsEnabled="{Binding SelectedFinderItem.Information.IsChannelVideo}" Command="{Binding CopyInformationTextCommand}" CommandParameter="{Binding SelectedFinderItem.Information.ChannelId}"/>
              <MenuItem Header="チャンネル名" IsEnabled="{Binding SelectedFinderItem.Information.IsChannelVideo}" Command="{Binding CopyInformationTextCommand}" CommandParameter="{Binding SelectedFinderItem.Information.ChannelName}" />
            </MenuItem>
            <Separator />
            <MenuItem Header="フィルタ追加" IsEnabled="{Binding IsUsingFinderFilter}">
              <MenuItem Header="動画ID" Command="{Binding AddFinderFilteringCommand}">
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoFinderFilterCommandParameterModel">
                    <Binding Source="{x:Static app_define_service_smile_video:SmileVideoFinderFilteringTarget.VideoId}" />
                    <Binding Path="SelectedFinderItem.Information.VideoId" />
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              <MenuItem Header="タイトル" Command="{Binding AddFinderFilteringCommand}">
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoFinderFilterCommandParameterModel">
                    <Binding Source="{x:Static app_define_service_smile_video:SmileVideoFinderFilteringTarget.Title}" />
                    <Binding Path="SelectedFinderItem.Information.Title" />
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              <MenuItem Header="ユーザーID" IsEnabled="{Binding SelectedFinderItem.Information.IsChannelVideo, Converter={StaticResource LogicalNotConverter}}" Command="{Binding AddFinderFilteringCommand}">
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoFinderFilterCommandParameterModel">
                    <Binding Source="{x:Static app_define_service_smile_video:SmileVideoFinderFilteringTarget.UserId}" />
                    <Binding Path="SelectedFinderItem.Information.UserId" />
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              <MenuItem Header="ユーザー名" IsEnabled="{Binding SelectedFinderItem.Information.IsChannelVideo, Converter={StaticResource LogicalNotConverter}}" Command="{Binding AddFinderFilteringCommand}">
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoFinderFilterCommandParameterModel">
                    <Binding Source="{x:Static app_define_service_smile_video:SmileVideoFinderFilteringTarget.UserName}" />
                    <Binding Path="SelectedFinderItem.Information.UserName" />
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              <MenuItem Header="チャンネルID" IsEnabled="{Binding SelectedFinderItem.Information.IsChannelVideo}" Command="{Binding AddFinderFilteringCommand}">
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoFinderFilterCommandParameterModel">
                    <Binding Source="{x:Static app_define_service_smile_video:SmileVideoFinderFilteringTarget.ChannelId}" />
                    <Binding Path="SelectedFinderItem.Information.ChannelId" />
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              <MenuItem Header="チャンネル名" IsEnabled="{Binding SelectedFinderItem.Information.IsChannelVideo}" Command="{Binding AddFinderFilteringCommand}">
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoFinderFilterCommandParameterModel">
                    <Binding Source="{x:Static app_define_service_smile_video:SmileVideoFinderFilteringTarget.ChannelName}" />
                    <Binding Path="SelectedFinderItem.Information.ChannelName" />
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              <!--
              つかわんだろ
              <MenuItem Header="コメント" Command="{Binding AddFinderFilteringCommand}">
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoFinderFilterCommandParameterModel">
                    <Binding Source="{x:Static app_define_service_smile_video:SmileVideoFinderFilteringTarget.Description}" />
                    <Binding Path="SelectedFinderItem.Information.Description" />
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              -->
              <MenuItem Header="タグ" ItemsSource="{Binding SelectedFinderItem.Information.TagList}">
                <MenuItem.ItemContainerStyle>
                  <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding TagName}"/>
                    <Setter Property="Command" Value="{Binding DataContext.AddFinderFilteringCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                    <Setter Property="CommandParameter">
                      <Setter.Value>
                        <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoFinderFilterCommandParameterModel">
                          <Binding Source="{x:Static app_define_service_smile_video:SmileVideoFinderFilteringTarget.Tag}" />
                          <Binding Path="TagName" />
                        </MultiBinding>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </MenuItem.ItemContainerStyle>
              </MenuItem>
            </MenuItem>
            <Separator />
            <MenuItem Header="キャッシュ破棄" Command="{Binding SelectedFinderItem.Information.ClearCacheCommand}" />
          </ContextMenu>
        </ListBox.ContextMenu>
        <ListBox.ItemTemplate>
          <DataTemplate>
            <ContentControl x:Name="detail">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                  <i:InvokeCommandAction Command="{Binding Information.OpenVideoDefaultCommand}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>

              <DockPanel Background="Transparent">
                <CheckBox DockPanel.Dock="Left" Width="32" PreviewMouseDoubleClick="UIElement_PreviewMouseDoubleClick" IsChecked="{Binding IsChecked}">
                  <CheckBox.Template>
                    <ControlTemplate TargetType="CheckBox">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" TextAlignment="Center" Text="{Binding Number}" />
                        <CheckBox Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" IsEnabled="{Binding Checkable, RelativeSource={RelativeSource AncestorType=UserControl}}" IsChecked="{Binding IsChecked}" />
                      </Grid>
                    </ControlTemplate>
                  </CheckBox.Template>
                </CheckBox>

                <Grid Width="78" Height="60" DockPanel.Dock="Left" >
                  <app_view_controls:LoadStateNavigator ShowStateText="True" LoadState="{Binding Information.ThumbnailLoadState, Mode=OneWay}" />
                  <Image Source="{Binding Information.ThumbnailImage, Mode=OneWay}" />
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="80" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="80" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="160" />
                      <!-- dummy -->
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <app_view_controls:LoadStateNavigator
                      Grid.Row="0"
                      Grid.RowSpan="3"
                      Grid.Column="0"
                      Grid.ColumnSpan="7"
                      ShowStateText="False"
                    >
                      <app_view_controls:LoadStateNavigator.Style>
                        <Style TargetType="app_view_controls:LoadStateNavigator">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Information.NeedLoadInformationFlag}" Value="True">
                              <Setter Property="LoadState" Value="{Binding Information.InformationLoadState}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Information.NeedLoadInformationFlag}" Value="False">
                              <Setter Property="LoadState" Value="Loaded" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </app_view_controls:LoadStateNavigator.Style>
                    </app_view_controls:LoadStateNavigator>

                    <Border Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="7" >
                      <Border.Background>
                        <LinearGradientBrush Opacity="0.5" StartPoint="0.5,0" EndPoint="0.5,1">
                          <GradientStop Color="#444444" Offset="0"/>
                          <GradientStop Color="#888888" Offset="1"/>
                        </LinearGradientBrush>
                      </Border.Background>
                      <Border.Style>
                        <Style TargetType="Border">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Approval}" Value="False">
                              <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                          </Style.Triggers>
                          <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                      </Border.Style>
                    </Border>

                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="7" Padding="2,1" FontWeight="Bold" Text="{Binding Information.Title}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="再生数" Style="{StaticResource HeaderColumn}" />
                    <TextBlock Grid.Row="1" Grid.Column="1">
                      <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource NumberColumn}">
                          <Style.Triggers>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasViewConter}" Value="False" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="---" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasViewConter}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.ViewCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasViewConter}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.ViewCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasViewConter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="None" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="未処理" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasViewConter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Preparation" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="準備中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasViewConter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loading" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loaded" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.ViewCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Failure" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込失敗" />
                            </MultiDataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="1" Grid.Column="2" Text="コメント" Style="{StaticResource HeaderColumn}" />
                    <TextBlock Grid.Row="1" Grid.Column="3">
                      <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource NumberColumn}">
                          <Style.Triggers>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasCommentCounter}" Value="False" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="---" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasCommentCounter}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.CommentCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasCommentCounter}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.CommentCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasCommentCounter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="None" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="未処理" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasCommentCounter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Preparation" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="準備中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasCommentCounter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loading" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loaded" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.CommentCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Failure" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込失敗" />
                            </MultiDataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="1" Grid.Column="4" Text="投稿日" Style="{StaticResource HeaderColumn}" />
                    <TextBlock Grid.Row="1" Grid.Column="5">
                      <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource NumberColumn}">
                          <Style.Triggers>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasFirstRetrieve}" Value="False" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="----/--/--" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasFirstRetrieve}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.FirstRetrieve, Mode=OneWay, StringFormat={}{0:yyy/MM/dd HH:mm:ss}}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasFirstRetrieve}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.FirstRetrieve, Mode=OneWay, StringFormat={}{0:yyy/MM/dd HH:mm:ss}}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasFirstRetrieve}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="None" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="未処理" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasFirstRetrieve}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Preparation" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="準備中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasFirstRetrieve}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loading" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loaded" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.FirstRetrieve, Mode=OneWay, StringFormat={}{0:yyy/MM/dd HH:mm:ss}}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Failure" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込失敗" />
                            </MultiDataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="時間" Style="{StaticResource HeaderColumn}" />
                    <TextBlock Grid.Row="2" Grid.Column="1" >
                      <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource NumberColumn}">
                          <Style.Triggers>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasLength}" Value="False" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="--:--" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasLength}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.Length, Mode=OneWay, Converter={StaticResource TimespanToHMFormatConverter}}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasLength}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.Length, Mode=OneWay, Converter={StaticResource TimespanToHMFormatConverter}}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasLength}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="None" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="未処理" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasLength}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Preparation" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="準備中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasLength}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loading" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loaded" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.Length, Mode=OneWay, Converter={StaticResource TimespanToHMFormatConverter}}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Failure" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込失敗" />
                            </MultiDataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="2" Grid.Column="2" Text="マイリスト" Style="{StaticResource HeaderColumn}" />
                    <TextBlock Grid.Row="2" Grid.Column="3">
                      <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource NumberColumn}">
                          <Style.Triggers>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasMylistCounter}" Value="False" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="---" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="False" />
                                <Condition Binding="{Binding Information.HasMylistCounter}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.MylistCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasMylistCounter}" Value="True" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.MylistCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasMylistCounter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="None" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="未処理" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasMylistCounter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Preparation" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="準備中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.HasMylistCounter}" Value="False" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loading" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込中" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Loaded" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="{Binding Information.MylistCounter, Mode=OneWay, StringFormat=N0}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Information.NeedLoadInformationFlag}" Value="True" />
                                <Condition Binding="{Binding Information.InformationLoadState}" Value="Failure" />
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Text" Value="読込失敗" />
                            </MultiDataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="2" Grid.Column="4" Text="状態" Style="{StaticResource HeaderColumn}" />
                    <Border Grid.Row="2" Grid.Column="5" Padding="{StaticResource ValueCell}">
                      <DockPanel>
                        <TextBlock DockPanel.Dock="Right">
                          <TextBlock.Style>
                            <Style TargetType="TextBlock">
                              <Style.Triggers>
                                <DataTrigger Value="True">
                                  <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource LogicalMultiOrConverter}">
                                      <Binding Path="Information.LoadedNormalVideo" />
                                      <Binding Path="Information.LoadedEconomyVideo" />
                                      <Binding Path="Information.LoadedDmcVideos" />
                                    </MultiBinding>
                                  </DataTrigger.Binding>
                                  <Setter Property="Text" Value="有" />
                                </DataTrigger>
                                <DataTrigger Value="False">
                                  <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource LogicalMultiOrConverter}">
                                      <Binding Path="Information.LoadedNormalVideo" />
                                      <Binding Path="Information.LoadedEconomyVideo" />
                                      <Binding Path="Information.LoadedDmcVideos" />
                                    </MultiBinding>
                                  </DataTrigger.Binding>
                                  <Setter Property="Text" Value="無" />
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBlock.Style>
                        </TextBlock>
                        <TextBlock DockPanel.Dock="Right">キャッシュ:</TextBlock>

                        <Border DockPanel.Dock="Right" Width="12" />

                        <TextBlock DockPanel.Dock="Right">
                          <TextBlock.Style>
                            <Style TargetType="TextBlock">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Information.ViewingAlready}" Value="True">
                                  <Setter Property="Text" Value="済" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Information.ViewingAlready}" Value="False">
                                  <Setter Property="Text" Value="未" />
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBlock.Style>
                        </TextBlock>
                        <TextBlock DockPanel.Dock="Right">視聴:</TextBlock>

                        <Border/>
                      </DockPanel>
                    </Border>
                  </Grid>
                </Grid>
              </DockPanel>
            </ContentControl>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>

    </Grid>

    <ContentControl x:Name="PART_Footer" Grid.Row="3" Content="{Binding FooterContent, RelativeSource={RelativeSource AncestorType=UserControl}}" Style="{StaticResource HeadFootContent}" Grid.ColumnSpan="2" />

    <!-- サイズ固定しないと変になる -->
    <mamc:Flyout x:Name="popupFilter" Grid.Row="2" Width="350" Visibility="Hidden" Header="フィルタリング設定" IsOpen="{Binding ShowFilterSetting}" Style="{StaticResource FinderFlyout}" >
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <CheckBox Grid.Row="0" Margin="5" IsChecked="{Binding IsEnabledFinderFiltering}">ファインダーフィルタ使用する</CheckBox>
        <app_view_controls_service_smile_video_setting:SmileVideoFinderFiltering Grid.Row="1" Filtering="{Binding FinderFilering}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="FilteringChanged">
              <i:InvokeCommandAction Command="{Binding ChangedFilteringCommand}" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </app_view_controls_service_smile_video_setting:SmileVideoFinderFiltering>
      </Grid>
    </mamc:Flyout>

  </Grid>
</UserControl>
