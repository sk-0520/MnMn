<!--
  呼び出し元から DataContext を設定して使用。
-->
<UserControl
  x:Name="root"
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.SmileChannelManager"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"

  xmlns:app_view_converter_service_smile="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter.Service.Smile"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"
  xmlns:app_view_controls_service_smile="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile"
  xmlns:app_view_controls_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video"
  xmlns:app_view_attachment="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Attachment"
  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="300"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
      <cttn_sl_view_converter:LogicalMultiEqualConverter x:Key="LogicalMultiEqualConverter" />
      <app_view_converter:EscapeAccessKeyConverter x:Key="EscapeAccessKeyConverter" />
      <app_view_converter:DoubleToParameterPercentConverter x:Key="DoubleToParameterPercentConverter" />
      <app_view_converter_service_smile:SmileChannelHasBookmarkConverter x:Key="SmileChannelHasBookmarkConverter" />
      <Style x:Key="ReadonlyText" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="IsUndoEnabled" Value="False" />
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="{Binding GroupWidth, Mode=TwoWay}" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="{Binding ItemsWidth, Mode=TwoWay}" />
    </Grid.ColumnDefinitions>

    <app_view_controls:FocusedTabControl Style="{StaticResource FinderTab}" Grid.Column="0">
      <TabItem Header="ブックマーク" app_view_attachment:MenuTabItem.Header="{Binding Header, RelativeSource={RelativeSource Self}}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <ToolBar Grid.Row="0">
            <Button Command="{Binding MoveUpBookmarkSelectedItemCommand}">
              <Viewbox Style="{StaticResource SmallIconBox}">
                <Canvas Style="{StaticResource IconCanvas-24x24}">
                  <Path Data="{StaticResource Image_Item-Up}" Style="{StaticResource SmallDefaultIconPath}" />
                </Canvas>
              </Viewbox>
            </Button>
            <Button Command="{Binding MoveDownBookmarkSelectedItemCommand}">
              <Viewbox Style="{StaticResource SmallIconBox}">
                <Canvas Style="{StaticResource IconCanvas-24x24}">
                  <Path Data="{StaticResource Image_Item-Down}" Style="{StaticResource SmallDefaultIconPath}" />
                </Canvas>
              </Viewbox>
            </Button>
          </ToolBar>

          <ListBox Grid.Row="1" ItemsSource="{Binding ChannelBookmarkItems}" SelectedItem="{Binding SelectedChannelBookmark}">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding ChannelName}" />
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </Grid>
      </TabItem>
      <TabItem Header="履歴" app_view_attachment:MenuTabItem.Header="{Binding Header, RelativeSource={RelativeSource Self}}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <ListBox Grid.Row="0" ItemsSource="{Binding ChannelHistoryItems}" SelectedItem="{Binding SelectedChannelHistory}">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding ChannelName}" />
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </Grid>

      </TabItem>
    </app_view_controls:FocusedTabControl>

    <GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />

    <app_view_controls:FocusedTabControl
      x:Name="channelTab"
      Grid.Column="2"
      Style="{StaticResource FinderTab}"
      ItemsSource="{Binding ChannelItems}"
      SelectedItem="{Binding SelectedChannel}"
    >
      <!--<app_view_controls:FocusedTabControl.ItemContainerStyle>
        <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
          <Setter Property="app_view_attachment:MenuTabItem.Header" Value="{Binding ChannelName, RelativeSource={RelativeSource AncestorType=TabItem}}" />
        </Style>
      </app_view_controls:FocusedTabControl.ItemContainerStyle>-->
      <app_view_controls:FocusedTabControl.ItemTemplate>
        <DataTemplate>
          <StackPanel Style="{StaticResource TabHeader}">
            <TextBlock Text="{Binding ChannelName, Mode=OneWay}" />
            <Button Style="{StaticResource TabCloseButton}" />
          </StackPanel>
        </DataTemplate>
      </app_view_controls:FocusedTabControl.ItemTemplate>
      <app_view_controls:FocusedTabControl.ContentTemplate>
        <DataTemplate>
          <!-- タブにしたかったけど色々あって諦めた -->
          <Grid x:Name="container">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <app_view_controls:WebNavigator
                x:Name="webChannel"
                IsEnabledUserChangeSource="False"
                NewWindowCommand="{Binding DataContext.NewWindowCommand, ElementName=root}"
              >
              <app_view_controls:WebNavigator.ToolbarLeftContent>
                <Button CommandParameter="{Binding}">
                  <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                      <Style.Triggers>
                        <DataTrigger Value="True">
                          <DataTrigger.Binding>
                            <MultiBinding Converter="{StaticResource SmileChannelHasBookmarkConverter}">
                              <MultiBinding.Bindings>
                                <Binding Path="." />
                                <Binding Path="DataContext.ChannelBookmarkItems" RelativeSource="{RelativeSource AncestorType=app_view_controls_service_smile:SmileChannelManager}" />
                              </MultiBinding.Bindings>
                            </MultiBinding>
                          </DataTrigger.Binding>
                          <Setter Property="Command" Value="{Binding DataContext.RemoveBookmarkCommand, RelativeSource={RelativeSource AncestorType=app_view_controls_service_smile:SmileChannelManager}}" />
                          <Setter Property="Content" Value="ブックマークから削除" />
                        </DataTrigger>
                        <DataTrigger Value="False">
                          <DataTrigger.Binding>
                            <MultiBinding Converter="{StaticResource SmileChannelHasBookmarkConverter}">
                              <MultiBinding.Bindings>
                                <Binding Path="." />
                                <Binding Path="DataContext.ChannelBookmarkItems" RelativeSource="{RelativeSource AncestorType=app_view_controls_service_smile:SmileChannelManager}" />
                              </MultiBinding.Bindings>
                            </MultiBinding>
                          </DataTrigger.Binding>
                          <Setter Property="Command" Value="{Binding DataContext.AddBookmarkCommand, RelativeSource={RelativeSource AncestorType=app_view_controls_service_smile:SmileChannelManager}}" />
                          <Setter Property="Content" Value="ブックマークに追加" />
                        </DataTrigger>
                      </Style.Triggers>
                      <Setter Property="Content" Value="ブックマーク" />
                    </Style>
                  </Button.Style>
                </Button>
              </app_view_controls:WebNavigator.ToolbarLeftContent>
            </app_view_controls:WebNavigator>

            <Expander Grid.Row="1" ExpandDirection="Up" IsExpanded="{Binding ShowVideo}">
              <Expander.Style>
                <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
                  <Style.Triggers>
                    <Trigger Property="IsExpanded" Value="True">
                      <Setter Property="Height" Value="{Binding ActualHeight, ElementName=container, Converter={StaticResource DoubleToParameterPercentConverter}, ConverterParameter=0.5}" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Expander.Style>
              <Expander.Header>
                <StackPanel Orientation="Horizontal">
                  <app_view_controls:SourceLoadStateNavigator Style="{StaticResource SmallItemSourceLoadState}" SourceLoadState="{Binding VideoFinder.FinderLoadState}" />
                  <TextBlock>video</TextBlock>
                </StackPanel>
              </Expander.Header>
              <app_view_controls_service_smile_video:SmileVideoFinderControl DataContext="{Binding VideoFinder}" />
            </Expander>
          </Grid>
        </DataTemplate>
      </app_view_controls:FocusedTabControl.ContentTemplate>
    </app_view_controls:FocusedTabControl>

  </Grid>
</UserControl>
