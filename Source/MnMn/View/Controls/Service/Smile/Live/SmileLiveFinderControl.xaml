<!--
  呼び出し元から DataContext を設定して使用。
-->
<UserControl
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Live.SmileLiveFinderControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"

  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
  xmlns:mamc="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

  xmlns:cttn_sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"

  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"
  xmlns:app_view_converter_service_smile_live="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter.Service.Smile.Live"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"

  DataContextChanged="UserControl_DataContextChanged"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="300"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/Resources/ListBoxDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/ImageDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/TextBoxDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/MenuDictionary.xaml" />
      </ResourceDictionary.MergedDictionaries>-->

      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

      <cttn_sl_view_converter:LogicalMultiOrConverter x:Key="LogicalMultiOrConverter" />
      <cttn_sl_view_converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
      <cttn_sl_view_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
      <cttn_sl_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />

      <app_view_converter:EnumDisplayConverter x:Key="EnumDisplayConverter" />
      <app_view_converter:MultiCommandParameterConverter x:Key="MultiCommandParameterConverter" />
      <app_view_converter_service_smile_live:ElapsedTimeFromNowTimeConverter x:Key="ElapsedTimeFromNowTimeConverter" />

      <Thickness x:Key="ValueCell">8,2</Thickness>

      <Style x:Key="HeaderColumn" TargetType="TextBlock">
        <Setter Property="Padding" Value="2" />
      </Style>

      <Style x:Key="NumberColumn" TargetType="TextBlock">
        <Setter Property="Padding" Value="{StaticResource ValueCell}" />
        <Setter Property="TextAlignment" Value="Right" />
      </Style>

      <Style x:Key="HeadFootContent" TargetType="ContentControl">
        <Setter Property="Visibility" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource NullToVisibilityConverter}}" />
      </Style>

      <Style x:Key="BodyContentVisibility" TargetType="Grid">
        <Setter Property="Visibility" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource NullToVisibilityConverter}}" />
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <ContentControl x:Name="PART_Header" Grid.Row="0" Content="{Binding HeaderContent, RelativeSource={RelativeSource AncestorType=UserControl}}" Style="{StaticResource HeadFootContent}" />
    <Grid Grid.Row="1" Style="{StaticResource BodyContentVisibility}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <TextBox Grid.Column="2" mamc:TextBoxHelper.ClearTextButton="True" VerticalAlignment="Center" mamc:TextBoxHelper.Watermark="タイトルフィルタ" Text="{Binding InputTitleFilter, UpdateSourceTrigger=PropertyChanged}" Margin="{StaticResource LeftMargin}" />

      <ToggleButton Grid.Column="3" IsChecked="{Binding IsBlacklist}">除外</ToggleButton>
      <Label Grid.Column="4" Margin="10,0,0,0" >並べ替え</Label>
      <!--<ToggleButton Grid.Column="5" IsChecked="{Binding IsAscending}">
        <Image Source="/Resources/Service/Smile/Video/Finder/SortAscending.png" Style="{StaticResource SmallIconImage}" />
      </ToggleButton>-->
      <ToggleButton Grid.Column="5" IsChecked="{Binding IsAscending}" Style="{StaticResource OrderAscendingButton}" />
      <ComboBox Grid.Column="6" MinWidth="100" VerticalContentAlignment="Center" ItemsSource="{Binding SortTypeItems}" SelectedItem="{Binding SelectedSortType}">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConverter}}" />
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>

    </Grid>
    <Grid Grid.Row="2" Style="{StaticResource BodyContentVisibility}">
      <Grid.RowDefinitions>
        <RowDefinition Height="6*" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>

      <ListBox
        x:Name="PART_List"
        Grid.Row="0"
        Grid.RowSpan="2"
        Grid.Column="0"
        Grid.ColumnSpan="2"
        ItemsSource="{Binding FinderItems}"
        SelectedItem="{Binding SelectedFinderItem}"
        Loaded="PART_List_Loaded"
      >
        <ListBox.InputBindings>
          <KeyBinding Key="Return" Command="{Binding SelectedFinderItem.Information.OpenVideoDefaultCommand}" />
          <!--<KeyBinding Key="Space" Command="{Binding SelectedFinderItem.ToggleCheckCommand}" />
          <KeyBinding Modifiers="Ctrl" Key="A" Command="{Binding AllCheckCommand}" />-->
        </ListBox.InputBindings>
        <ListBox.ItemContainerStyle>
          <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
          </Style>
        </ListBox.ItemContainerStyle>
        <!--<ListBox.ContextMenu>
          <ContextMenu>
            <MenuItem Header="プレイヤーで開く" IsChecked="{Binding OpenMode, Mode=OneWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Application}}" >
              <MenuItem Header="再生中プレイヤー" IsChecked="{Binding OpenPlayerInNewWindow, Mode=OneWay, Converter={StaticResource LogicalNotConverter}}" Command="{Binding SelectedFinderItem.Information.OpenVideoFrommParameterCommnad}" >
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoOpenVideoCommandParameterModel">
                    <Binding Source="{x:Static app_define:ExecuteOrOpenMode.Application}" />
                    <Binding>
                      <Binding.Source>
                        <sys:Boolean>False</sys:Boolean>
                      </Binding.Source>
                    </Binding>
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
              <MenuItem Header="新規プレイヤー" IsChecked="{Binding OpenPlayerInNewWindow, Mode=OneWay}" Command="{Binding SelectedFinderItem.Information.OpenVideoFrommParameterCommnad}" >
                <MenuItem.CommandParameter>
                  <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoOpenVideoCommandParameterModel">
                    <Binding Source="{x:Static app_define:ExecuteOrOpenMode.Application}" />
                    <Binding>
                      <Binding.Source>
                        <sys:Boolean>True</sys:Boolean>
                      </Binding.Source>
                    </Binding>
                  </MultiBinding>
                </MenuItem.CommandParameter>
              </MenuItem>
            </MenuItem>
            <MenuItem Header="ブラウザで開く" IsChecked="{Binding OpenMode, Mode=OneWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Browser}}" Command="{Binding SelectedFinderItem.Information.OpenVideoFrommParameterCommnad}">
              <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoOpenVideoCommandParameterModel">
                  <Binding Source="{x:Static app_define:ExecuteOrOpenMode.Browser}" />
                  <Binding>
                    <Binding.Source>
                      <sys:Boolean>False</sys:Boolean>
                    </Binding.Source>
                  </Binding>
                </MultiBinding>
              </MenuItem.CommandParameter>
            </MenuItem>
            <MenuItem Header="外部プログラムで開く" IsChecked="{Binding OpenMode, Mode=OneWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_define:ExecuteOrOpenMode.Launcher}}" Command="{Binding SelectedFinderItem.Information.OpenVideoFrommParameterCommnad}">
              <MenuItem.CommandParameter>
                <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}" ConverterParameter="Service.Smile.Video.SmileVideoOpenVideoCommandParameterModel">
                  <Binding Source="{x:Static app_define:ExecuteOrOpenMode.Launcher}" />
                  <Binding>
                    <Binding.Source>
                      <sys:Boolean>False</sys:Boolean>
                    </Binding.Source>
                  </Binding>
                </MultiBinding>
              </MenuItem.CommandParameter>
            </MenuItem>
            <Separator />
            <MenuItem Header="あとで見る" Command="{Binding AddCheckItLaterCommand}" />
            <Separator />
            <MenuItem Header="キャッシュ破棄" Command="{Binding SelectedFinderItem.Information.ClearCacheCommand}" />
          </ContextMenu>
        </ListBox.ContextMenu>-->
        <ListBox.ItemTemplate>
          <DataTemplate>
            <ContentControl x:Name="detail">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                  <i:InvokeCommandAction Command="{Binding Information.OpenVideoDefaultCommand}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>

              <DockPanel Background="Transparent">
                <TextBlock DockPanel.Dock="Left" TextAlignment="Center" Text="{Binding Number}" />

                <Grid Width="64" Height="64" DockPanel.Dock="Left" >
                  <app_view_controls:LoadStateNavigator ShowStateText="True" LoadState="{Binding Information.ThumbnailLoadState, Mode=OneWay}" />
                  <Image Source="{Binding Information.ThumbnailImage, Mode=OneWay}" />
                </Grid>

                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="160" />
                  </Grid.ColumnDefinitions>

                  <TextBlock Grid.Row="0" Grid.ColumnSpan="6" FontWeight="Bold" Text="{Binding Information.Title}"/>

                  <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource HeaderColumn}">再生数</TextBlock>
                  <TextBlock Grid.Row="1" Grid.Column="1" Style="{StaticResource NumberColumn}" Text="{Binding Information.ViewCounter, StringFormat=N0}" />

                  <TextBlock Grid.Row="1" Grid.Column="2" Style="{StaticResource HeaderColumn}">コメント</TextBlock>
                  <TextBlock Grid.Row="1" Grid.Column="3" Style="{StaticResource NumberColumn}" Text="{Binding Information.CommentCounter, StringFormat=N0}" />

                  <TextBlock Grid.Row="1" Grid.Column="4" Style="{StaticResource HeaderColumn}">公開日(?)</TextBlock>
                  <TextBlock Grid.Row="1" Grid.Column="5" Style="{StaticResource NumberColumn}" Text="{Binding Information.ReleaseDate, StringFormat=yyyy/MM/dd HH:mm:ss}" />

                  <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource HeaderColumn}">時間</TextBlock>
                  <TextBlock Grid.Row="2" Grid.Column="1" Style="{StaticResource NumberColumn}" Text="{Binding Information.ReleaseDate, Converter={StaticResource ElapsedTimeFromNowTimeConverter}, StringFormat=hh\\:mm\\:ss}" />

                  <TextBlock Grid.Row="2" Grid.Column="4" Style="{StaticResource HeaderColumn}">その他</TextBlock>
                  <Grid Grid.Row="2" Grid.Column="5">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0">
                      <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource NumberColumn}">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Information.MemberOnly}" Value="True">
                              <Setter Property="Text" Value="メンバー限定" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Information.MemberOnly}" Value="False">
                              <Setter Property="Text" Value="公開" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Column="1">
                      <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource NumberColumn}">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Information.Type}" Value="Channel">
                              <Setter Property="Text" Value="チャンネル" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Information.Type}" Value="Community">
                              <Setter Property="Text" Value="コミュニティ" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </TextBlock.Style>
                    </TextBlock>

                  </Grid>
                </Grid>
              </DockPanel>
            </ContentControl>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>

      <Grid Grid.Column="1" Visibility="{Binding ShowFilterSetting, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Border BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <CheckBox Grid.Row="0" Margin="5" IsChecked="{Binding IsEnabledFinderFiltering}">ファインダーフィルタ使用する</CheckBox>
            <!--<app_view_controls_service_smile_video_setting:SmileVideoFinderFiltering Grid.Row="1" Filtering="{Binding FinderFilering}">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="FilteringChanged">
                  <i:InvokeCommandAction Command="{Binding ChangedFilteringCommand}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </app_view_controls_service_smile_video_setting:SmileVideoFinderFiltering>-->
          </Grid>
        </Border>
      </Grid>

    </Grid>

    <ContentControl x:Name="PART_Footer" Grid.Row="3" Content="{Binding FooterContent, RelativeSource={RelativeSource AncestorType=UserControl}}" Style="{StaticResource HeadFootContent}" />

  </Grid>
</UserControl>
