<!--
  呼び出し元から DataContext を設定して使用。
-->
<UserControl
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.SmileUsersManager"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:app_view_converter_service_smile="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter.Service.Smile"
  xmlns:app_view_controls="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls"
  xmlns:app_view_controls_service_smile_video="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Controls.Service.Smile.Video"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="300"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/Resources/TabDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/GridSplitterDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/ListBoxDictionary.xaml" />
        <ResourceDictionary Source="/View/Resources/SourceLoadStateDictionary.xaml" />
      </ResourceDictionary.MergedDictionaries>-->

      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
      <app_view_converter_service_smile:SmileUserHasBookmarkConverter x:Key="SmileUserHasBookmarkConverter" />
      <Style x:Key="ReadonlyText" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="IsUndoEnabled" Value="False" />
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="{Binding GroupWidth, Mode=TwoWay}" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="{Binding ItemsWidth, Mode=TwoWay}" />
    </Grid.ColumnDefinitions>

    <TabControl Grid.Column="0">
      <TabItem Header="ブックマーク">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <ToolBar Grid.Row="0">
            <Button Command="{Binding MoveUpBookmarkSelectedItemCommand}">
              <!--<Image Source="/Resources/Common/Item/Up.png" Style="{StaticResource SmallIconImage}" />-->
              <Viewbox Style="{StaticResource SmallIconBox}">
                <Canvas Style="{StaticResource IconCanvas-24x24}">
                  <Path Data="{StaticResource Image_ItemUp}" Style="{StaticResource SmallDefaultIconPath}" />
                </Canvas>
              </Viewbox>
            </Button>
            <Button Command="{Binding MoveDownBookmarkSelectedItemCommand}">
              <!--<Image Source="/Resources/Common/Item/Down.png" Style="{StaticResource SmallIconImage}" />-->
              <Viewbox Style="{StaticResource SmallIconBox}">
                <Canvas Style="{StaticResource IconCanvas-24x24}">
                  <Path Data="{StaticResource Image_ItemDown}" Style="{StaticResource SmallDefaultIconPath}" />
                </Canvas>
              </Viewbox>
            </Button>
          </ToolBar>

          <ListBox Grid.Row="1" ItemsSource="{Binding UserBookmarkItems}" SelectedItem="{Binding SelectedUserBookmark}">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding UserName}" />
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </Grid>
      </TabItem>
      <TabItem Header="履歴">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <ListBox Grid.Row="0" ItemsSource="{Binding UserHistoryItems}" SelectedItem="{Binding SelectedUserHistory}">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding UserName}" />
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </Grid>

      </TabItem>
    </TabControl>

    <GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />

    <app_view_controls:FocusedTabControl
      Grid.Column="2"
      SelectedItem="{Binding SelectedUser}"
      ItemsSource="{Binding UserItems}"
      Style="{StaticResource FinderTab}"
    >
      <app_view_controls:FocusedTabControl.ItemTemplate>
        <DataTemplate>
          <StackPanel Style="{StaticResource TabHeader}">
            <app_view_controls:SourceLoadStateNavigator Style="{StaticResource SmallItemSourceLoadState}" SourceLoadState="{Binding UserLoadState}" />
            <TextBlock Text="{Binding UserName}" Style="{StaticResource TabHeaderText}" />
            <ContentControl>
              <ContentControl.Style>
                <Style TargetType="ContentControl">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMyAccount}" Value="False">
                      <Setter Property="Content">
                        <Setter.Value>
                          <Button Style="{StaticResource TabCloseButton}" />
                        </Setter.Value>
                      </Setter>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </ContentControl.Style>
            </ContentControl>
          </StackPanel>
        </DataTemplate>
      </app_view_controls:FocusedTabControl.ItemTemplate>
      <app_view_controls:FocusedTabControl.ContentTemplate>
        <DataTemplate>
          <Grid>
            <TabControl TabStripPlacement="Top">
              <TabItem Header="ユーザー情報" IsSelected="{Binding IsUserSelected}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="160" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>

                  <StackPanel Grid.Row="0" Grid.Column="0" >
                    <Grid Width="150" VerticalAlignment="Top" Height="150">
                      <Image Source="{Binding ThumbnailImage}" />
                      <app_view_controls:LoadStateNavigator LoadState="{Binding ThumbnailLoadState}" />
                    </Grid>

                    <Button Grid.Row="1" Visibility="{Binding IsNotMyAccount, Converter={StaticResource BooleanToVisibilityConverter}}" CommandParameter="{Binding}">
                      <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                          <Style.Triggers>
                            <DataTrigger Value="True">
                              <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource SmileUserHasBookmarkConverter}">
                                  <MultiBinding.Bindings>
                                    <Binding Path="." />
                                    <Binding Path="DataContext.UserBookmarkItems" RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                  </MultiBinding.Bindings>
                                </MultiBinding>
                              </DataTrigger.Binding>
                              <Setter Property="Command" Value="{Binding DataContext.RemoveBookmarkCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                              <Setter Property="Content" Value="ブックマークから削除" />
                            </DataTrigger>
                            <DataTrigger Value="False">
                              <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource SmileUserHasBookmarkConverter}">
                                  <MultiBinding.Bindings>
                                    <Binding Path="." />
                                    <Binding Path="DataContext.UserBookmarkItems" RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                  </MultiBinding.Bindings>
                                </MultiBinding>
                              </DataTrigger.Binding>
                              <Setter Property="Command" Value="{Binding DataContext.AddBookmarkCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                              <Setter Property="Content" Value="ブックマークに追加" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </Button.Style>
                    </Button>

                  </StackPanel>

                  <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                      <StackPanel.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        </Style>
                      </StackPanel.Resources>

                      <Label>ユーザー名</Label>
                      <TextBox Text="{Binding UserName, Mode=OneWay}" />

                      <Label>ユーザーID</Label>
                      <TextBox Text="{Binding UserId, Mode=OneWay}" />

                      <Label>登録</Label>
                      <TextBox Text="{Binding ResistedVersion, Mode=OneWay}" />

                      <Label>会員情報</Label>
                      <TextBox>
                        <TextBox.Style>
                          <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsPremium}" Value="True">
                                <Setter Property="Text" Value="プレミアム会員" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding IsPremium}" Value="False">
                                <Setter Property="Text" Value="一般会員" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </TextBox.Style>
                      </TextBox>

                      <Label>性別</Label>
                      <TextBox>
                        <TextBox.Style>
                          <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsPublicGender}" Value="True">
                                <Setter Property="Text" Value="{Binding Gender, Mode=OneWay}" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding IsPublicGender}" Value="False">
                                <Setter Property="Text" Value="非公開" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </TextBox.Style>
                      </TextBox>

                      <Label>誕生日</Label>
                      <TextBox>
                        <TextBox.Style>
                          <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsPublicBirthday}" Value="True">
                                <Setter Property="Text" Value="{Binding Birthday, Mode=OneWay}" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding IsPublicBirthday}" Value="False">
                                <Setter Property="Text" Value="非公開" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </TextBox.Style>
                      </TextBox>

                      <Label>地域</Label>
                      <TextBox>
                        <TextBox.Style>
                          <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsPublicLocation}" Value="True">
                                <Setter Property="Text" Value="{Binding Location, Mode=OneWay}" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding IsPublicBirthday}" Value="False">
                                <Setter Property="Text" Value="非公開" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </TextBox.Style>
                      </TextBox>
                    </StackPanel>
                  </ScrollViewer>

                  <FlowDocumentScrollViewer Grid.Column="2" VerticalAlignment="Stretch">
                    <FlowDocumentScrollViewer.Document>
                      <FlowDocument>
                        <Paragraph>
                          <TextBlock Text="{Binding Description}" />
                        </Paragraph>
                      </FlowDocument>
                    </FlowDocumentScrollViewer.Document>
                  </FlowDocumentScrollViewer>

                </Grid>
              </TabItem>
              <TabItem Header="公開マイリスト" IsEnabled="{Binding IsPublicMyList}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="6*" />
                  </Grid.ColumnDefinitions>
                  <DockPanel Grid.Column="0">
                    <ToolBar DockPanel.Dock="Top">
                      <Button Command="{Binding AddBookmarkUserMyListCommand}" CommandParameter="{Binding SelectedMyListFinder}"  ToolTip="ブックマーク追加">
                        <Viewbox Style="{StaticResource SmallIconBox}">
                          <Canvas Style="{StaticResource IconCanvas-24x24}">
                            <Path Data="{StaticResource Image_Bookmark-Add}" Style="{StaticResource SmallDefaultIconPath}" />
                          </Canvas>
                        </Viewbox>
                      </Button>
                    </ToolBar>
                    <ListBox ItemsSource="{Binding MyListItems}" SelectedItem="{Binding SelectedMyListFinder}">
                      <ListBox.ItemTemplate>
                        <DataTemplate>
                          <StackPanel>
                            <StackPanel Orientation="Horizontal">
                              <app_view_controls:SourceLoadStateNavigator Width="8" Height="8" SourceLoadState="{Binding FinderLoadState}" />
                              <TextBlock Text="{Binding MyListName}" />
                              <TextBlock Margin="8,0,0,0" FontSize="8" Text="{Binding MyListId}" />
                            </StackPanel>
                            <TextBlock Text="{Binding MyListItemCount, StringFormat=アイテム数: {0}}" />
                          </StackPanel>
                        </DataTemplate>
                      </ListBox.ItemTemplate>
                    </ListBox>
                  </DockPanel>
                  <GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />
                  <app_view_controls_service_smile_video:SmileVideoFinderControl Grid.Column="2" DataContext="{Binding SelectedMyListFinder}" />
                </Grid>
              </TabItem>
              <TabItem Header="投稿動画" IsEnabled="{Binding IsPublicPost}">
                <app_view_controls_service_smile_video:SmileVideoFinderControl DataContext="{Binding PostFinder}" />
              </TabItem>
            </TabControl>
          </Grid>
        </DataTemplate>
      </app_view_controls:FocusedTabControl.ContentTemplate>

    </app_view_controls:FocusedTabControl>
  </Grid>
</UserControl>
