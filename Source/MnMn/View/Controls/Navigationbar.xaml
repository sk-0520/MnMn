<UserControl
  x:Class="ContentTypeTextNet.MnMn.MnMn.View.Controls.Navigationbar"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"

  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
  xmlns:sl_view_converter="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=ContentTypeTextNet.SharedLibrary"

  xmlns:app_view_converter="clr-namespace:ContentTypeTextNet.MnMn.MnMn.View.Converter"

  xmlns:app="clr-namespace:ContentTypeTextNet.MnMn.MnMn"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="30" d:DesignWidth="300"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
      <sys:Double x:Key="ProgressHeight">NaN</sys:Double>
      <sl_view_converter:LogicalMultiOrConverter x:Key="LogicalMultiOrConverter" />
      <sl_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />
      <app_view_converter:NegativeDoubleConverter x:Key="NegativeDoubleConverter" />
      <app_view_converter:TimespanHasHourToBooleanConverter x:Key="TimespanHasHourToBooleanConverter" />
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>

    <Button
      Grid.Column="0"
      IsEnabled="{Binding CanSeek, RelativeSource={RelativeSource AncestorType=UserControl}}"
      Command="{Binding PlayCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
      CommandParameter="{Binding PlayCommandParameter, RelativeSource={RelativeSource AncestorType=UserControl}}"
    >
      <Viewbox Style="{StaticResource SmallIconBox}">
        <Canvas Style="{StaticResource IconCanvas-24x24}">
          <Path>
            <Path.Resources>
              <Style TargetType="Path" BasedOn="{StaticResource SmallAccentIconPath}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding PlayerState, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="Playing">
                    <Setter Property="Data" Value="{StaticResource Image_Navigationbar_Pause}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding PlayerState, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="Pause">
                    <Setter Property="Data" Value="{StaticResource Image_Navigationbar_PlayPause}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding PlayerState, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="Stop">
                    <Setter Property="Data" Value="{StaticResource Image_Navigationbar_Play}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding PlayerState, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="Buffering">
                    <Setter Property="Data" Value="{StaticResource Image_Navigationbar_Buffering}" />
                  </DataTrigger>
                  <MultiDataTrigger>
                    <!-- 条件見るにこれで問題ないはず… -->
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding WaitingFirstPlay, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="True" />
                      <Condition Binding="{Binding IsUserOperationStop, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="False" />
                      <Condition Binding="{Binding IsAutoPlay, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="True" />
                      <Condition Binding="{Binding PlayerState, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="Stop" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Data" Value="{StaticResource Image_Navigationbar_Timer}" />
                  </MultiDataTrigger>
                </Style.Triggers>
              </Style>
            </Path.Resources>
          </Path>
        </Canvas>
      </Viewbox>
    </Button>
    <Button
      Grid.Column="1"
      IsEnabled="{Binding CanSeek, RelativeSource={RelativeSource AncestorType=UserControl}}"
      Command="{Binding StopCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
      CommandParameter="{Binding StopCommandParameter, RelativeSource={RelativeSource AncestorType=UserControl}}"
    >
      <Viewbox Style="{StaticResource SmallIconBox}">
        <Canvas Style="{StaticResource IconCanvas-24x24}">
          <Path Data="{StaticResource Image_Navigationbar_Stop}" Style="{StaticResource SmallDefaultIconPath}" />
        </Canvas>
      </Viewbox>
    </Button>
    <Slider
      x:Name="seekbar"
      Grid.Column="2"
      Margin="1,2"
      Minimum="0"
      Maximum="1"
      LargeChange="0.05"
      SmallChange="0.01"
      Ticks="0.1"
      Focusable="False"
      KeyboardNavigation.DirectionalNavigation="None"
      Value="{Binding VideoPosition, RelativeSource={RelativeSource AncestorType=UserControl}}"
      PreviewMouseDown="Seekbar_PreviewMouseDown"
    >
      <Slider.Template>
        <ControlTemplate TargetType="Slider">
          <Border>
            <Grid x:Name="PART_SliderBase">
              <ProgressBar
                x:Name="PART_ProgressBar"
                Margin="2,0"
                Height="{StaticResource ProgressHeight}"
                Minimum="0"
                Maximum="{Binding VideoTotalSize, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=UserControl}}"
                Value="{Binding VideoLoadedSize, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=UserControl}}"
                Foreground="{Binding VideoLoadingForeground, RelativeSource={RelativeSource AncestorType=UserControl}}"
                Background="{Binding VideoLoadingBackground, RelativeSource={RelativeSource AncestorType=UserControl}}"
              />
              <Track x:Name="PART_Track">
                <Track.Thumb>
                  <Thumb Visibility="{Binding CanSeek, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Thumb.Template>
                      <ControlTemplate>
                        <Grid>
                          <Rectangle
                            x:Name="IndeterminateSolidFill"
                            Margin="{TemplateBinding BorderThickness}"
                            Fill="{DynamicResource AccentColorBrush}"
                            StrokeThickness="0"
                            Opacity="1"
                          />
                          <Rectangle
                            Width="8"
                            Stroke="{DynamicResource WhiteColorBrush}"
                            StrokeThickness="2"
                          >
                            <Rectangle.Fill>
                              <LinearGradientBrush MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="0,3">
                                <GradientStop Offset="0" Color="{DynamicResource ProgressIndeterminateColor2}" />
                                <GradientStop Offset="0.2" Color="{DynamicResource Gray5}" />
                                <GradientStop Offset="0.8" Color="{DynamicResource Gray5}" />
                                <GradientStop Offset="1.0" Color="{DynamicResource ProgressIndeterminateColor3}" />
                              </LinearGradientBrush>
                            </Rectangle.Fill>
                          </Rectangle>
                        </Grid>
                      </ControlTemplate>
                    </Thumb.Template>
                  </Thumb>
                </Track.Thumb>
              </Track>
              <ContentControl Content="{Binding SeekbarInnerFadeContent, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <ContentControl.Style>
                  <Style TargetType="ContentControl">
                    <Style.Triggers>
                      <EventTrigger RoutedEvent="Control.MouseEnter">
                        <BeginStoryboard>
                          <Storyboard >
                            <DoubleAnimation Duration="00:00:00.25" To="1" Storyboard.TargetProperty="Opacity"/>
                          </Storyboard>
                        </BeginStoryboard>
                      </EventTrigger>
                      <EventTrigger RoutedEvent="Control.MouseLeave">
                        <BeginStoryboard>
                          <Storyboard >
                            <DoubleAnimation Duration="00:00:00.5" To="0" Storyboard.TargetProperty="Opacity"/>
                          </Storyboard>
                        </BeginStoryboard>
                      </EventTrigger>
                    </Style.Triggers>
                    <Setter Property="Opacity" Value="0" />
                  </Style>
                </ContentControl.Style>
              </ContentControl>
              <Popup
                AllowsTransparency="True"
                PopupAnimation="Fade"
                PlacementTarget="{Binding ElementName=PART_ProgressBar}"
                Width="{Binding ActualWidth, ElementName=PART_ProgressBar}"
                MinHeight="{Binding ActualHeight, ElementName=PART_ProgressBar}"
                Placement="{Binding SeekbarPopupPlacement, RelativeSource={RelativeSource AncestorType=UserControl}}"
                IsOpen="{Binding SeekbarPopupIsOpen, RelativeSource={RelativeSource AncestorType=UserControl}}"
              >
                <ContentControl Content="{Binding SeekbarPopupContent, RelativeSource={RelativeSource AncestorType=UserControl}}" />
              </Popup>
            </Grid>
          </Border>
        </ControlTemplate>
      </Slider.Template>
    </Slider>
    <StackPanel Grid.Column="3" Orientation="Horizontal" Margin="0,0,8,0">
      <TextBlock VerticalAlignment="Center">
        <Run>
          <Run.Style>
            <Style TargetType="Run">
              <Style.Triggers>
                <DataTrigger Binding="{Binding TotalTime, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource TimespanHasHourToBooleanConverter}}" Value="True">
                  <Setter Property="Text" Value="{Binding PlayTime, StringFormat=hh\\:mm\\:ss, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                </DataTrigger>
              </Style.Triggers>
              <Setter Property="Text" Value="{Binding PlayTime, StringFormat=mm\\:ss, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            </Style>
          </Run.Style>
        </Run>
        <Run>/</Run>
        <Run>
          <Run.Style>
            <Style TargetType="Run">
              <Style.Triggers>
                <DataTrigger Binding="{Binding TotalTime, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource TimespanHasHourToBooleanConverter}}" Value="True">
                  <Setter Property="Text" Value="{Binding TotalTime, StringFormat=hh\\:mm\\:ss, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                </DataTrigger>
              </Style.Triggers>
              <Setter Property="Text" Value="{Binding TotalTime, StringFormat=mm\\:ss, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            </Style>
          </Run.Style>
        </Run>
      </TextBlock>
    </StackPanel>
    <Grid Grid.Column="4">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <ToggleButton
        Grid.Column="0"
        IsEnabled="{Binding CanSeek, RelativeSource={RelativeSource AncestorType=UserControl}}"
        IsChecked="{Binding IsReplayChecked, RelativeSource={RelativeSource AncestorType=UserControl}}"
        Command="{Binding ReplayCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
        CommandParameter="{Binding ReplayCommandParameter, RelativeSource={RelativeSource AncestorType=UserControl}}"
      >
        <Viewbox Style="{StaticResource SmallIconBox}">
          <Canvas Style="{StaticResource IconCanvas-24x24}">
            <Path>
              <Path.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource SmallDefaultIconPath}">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsReplayChecked, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="True">
                      <Setter Property="Data" Value="{StaticResource Image_Navigationbar_Repeat-On}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsReplayChecked, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="False">
                      <Setter Property="Data" Value="{StaticResource Image_Navigationbar_Repeat-Off}" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Path.Resources>
            </Path>
          </Canvas>
        </Viewbox>
      </ToggleButton>

      <Control x:Name="volume" Grid.Column="1">
        <Control.Template>
          <ControlTemplate>
            <Grid>
              <ToggleButton
                x:Name="PART_AudioMute"
                IsChecked="{Binding IsMute, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource LogicalNotConverter}}"
              >
                <Grid>
                  <Viewbox Style="{StaticResource SmallIconBox}">
                    <Canvas Style="{StaticResource IconCanvas-24x24}">
                      <Path>
                        <Path.Resources>
                          <Style TargetType="Path" BasedOn="{StaticResource SmallDefaultIconPath}">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsMute, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="True">
                                <Setter Property="Data" Value="{StaticResource Image_Navigationbar_Audio-Off}" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding IsMute, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=OneWay}" Value="False">
                                <Setter Property="Data" Value="{StaticResource Image_Navigationbar_Audio-On}" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Path.Resources>
                      </Path>
                    </Canvas>
                  </Viewbox>
                </Grid>
              </ToggleButton>
              <Canvas Panel.ZIndex="100">
                <Border
                  x:Name="PART_VolumeSliderParent"
                  Canvas.Left="0"
                  Canvas.Top="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource NegativeDoubleConverter}}"
                  Width="{Binding ActualWidth, ElementName=PART_AudioMute}"
                  Background="{DynamicResource WindowBackgroundBrush}"
                  BorderBrush="{DynamicResource AccentColorBrush3}"
                  BorderThickness="2, 1, 2, 1"
                  Opacity="0"
                >
                  <Slider
                    x:Name="PART_VolumeSlider"
                    Orientation="Vertical"
                    Height="100"
                    HorizontalAlignment="Center"
                    Focusable="False"
                    Minimum="{Binding VolumeMinimum, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Maximum="{Binding VolumeMaximum, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Value="{Binding Volume, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Style="{StaticResource FlatSlider}"
                  />
                </Border>
              </Canvas>
              <ProgressBar
                Margin="3"
                Height="3"
                IsHitTestVisible="False"
                IsTabStop="False"
                Focusable="False"
                VerticalAlignment="Bottom"
                BorderThickness="1"
                BorderBrush="{StaticResource SeperatorBrush}"
                Background="{x:Null}"
                Minimum="{Binding VolumeMinimum, RelativeSource={RelativeSource AncestorType=UserControl}}"
                Maximum="{Binding VolumeMaximum, RelativeSource={RelativeSource AncestorType=UserControl}}"
                Value="{Binding Volume, RelativeSource={RelativeSource AncestorType=UserControl}}"
                Foreground="{StaticResource AccentColorBrush2}"
              >
              </ProgressBar>
            </Grid>

            <ControlTemplate.Triggers>
              <EventTrigger RoutedEvent="Control.MouseEnter">
                <BeginStoryboard>
                  <Storyboard >
                    <DoubleAnimation Duration="00:00:00.1" To="0.9" Storyboard.TargetName="PART_VolumeSliderParent" Storyboard.TargetProperty="Opacity"/>
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
              <EventTrigger RoutedEvent="Control.MouseLeave">
                <BeginStoryboard>
                  <Storyboard >
                    <DoubleAnimation Duration="00:00:00.5" To="0" Storyboard.TargetName="PART_VolumeSliderParent" Storyboard.TargetProperty="Opacity"/>
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
            </ControlTemplate.Triggers>

          </ControlTemplate>
        </Control.Template>
      </Control>

      <ContentControl
        Grid.Column="2"
        Content="{Binding ExstendsContent, RelativeSource={RelativeSource AncestorType=UserControl}}"
      />
    </Grid>
  </Grid>
</UserControl>
